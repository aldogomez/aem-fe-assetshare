---
pagetitle: Asset Share
published: true
layout: assetshare_layout
pagetype: assetshare
pagedescription: 
order: 10
---

<div class="container_16">
    <div class="grid_16 body_container">
        <div class="querybuilder-wrapper">
            <div class="parbase querybuilder"><form id="querybuilder-1445545965602-form" class=" x-form">
    <script type="text/javascript">
        CQ.Ext.onLoad(function() {
            var form = new CQ.Ext.form.BasicForm("querybuilder-1445545965602-form", {
                "method": "GET",
                "url": "/bin/querybuilder.json"
            });



            var qb = new CQ.search.QueryBuilder({
                "form": form,
                "renderFieldsTo": "querybuilder-1445545965602-form"
            });

            var width = $("#results-cell").position().left - $("#results").position().left;
            var buttonWidth = 80;
            var buttonHeight = 20;
            qb.add([{
                "xtype": "button",
                "text": CQ.I18n.getMessage("Saved Searches"),
                "id": "saved_query_button",
                "width":buttonWidth + "px",
                "height":buttonHeight + "px",
                "renderTo":"savedsearch-cell",
                "style": "position: relative;top:" + 5 + "px;left:" + (buttonWidth / 2) + "px",
                "listeners": {
                    click:function() {
                        $("#saved-search").savedsearchFloatingPanel("toggle");
                    },
                    mouseover: function () {
                        this.getEl().dom.title = CQ.I18n.getMessage('Manage Saved Searches');
                    }
                }
            }
            ]);
            CQ.search.Util.setQueryBuilder(qb);

        });
    </script>

    <link rel="stylesheet" href="/libs/dam/widgets/source/savedsearch/clientlibs.css" type="text/css">
<script type="text/javascript" src="/etc/clientlibs/granite/handlebars.js"></script>
<script type="text/javascript" src="/libs/dam/widgets/source/savedsearch/clientlibs.js"></script>

    <div id="saved-search" class="floating-panel" data-role="floatingPanel" data-title="Manage Saved Searches" style="left: 0px; top: 0px;"><div class="floating-panel-header"><h5>Manage Saved Searches</h5><a href="#" class="floating-panel-header-close">X</a><div style="clear:both"></div></div>
        <div id="saved-search-panel"><br>&nbsp;&nbsp;<button type="button" class="save-current-search">Save Current Search</button><br><br><ul><li style="margin:0;padding:0" class="ss-panel"><div id="nn"><label for="searchtitle">Search Description:</label><br><br><input type="text" name="jcr:title" id="searchtitle"><br><br><input type="button" value="Add" class="save-new-search-button">&nbsp;&nbsp;<input type="button" value="Cancel" class="cancel-new-search-btn"></div></li></ul><ul id="query-item-list"></ul><script id="query-list-item" type="text/x-handlebars-template"><li class='item {{path}}' title='click to execute query {{title}}' id='{{path}}'><div class='title'>{{title}}</div><div class='delete-query' title='Remove'>Remove</div></li><li class='delete-panel {{path}}'><div class='action'><a href='#' class='save-search-remove-button'>Remove</a> <a href='#' class='save-search-cancel-button'>Cancel</a></div></li></script></div>
    </div>
    
<a href="/content/dam/sunpower/asset-share/assetviewer.html" class="hideInPreview" style="font-style:italic;">Go to assigned Asset Editor</a><table class="wrapper"><tbody>

    
    
        
            
        
    


    
    <tr><td colspan="2" class="line_gray" id="prebar"></td></tr>
    <tr><td colspan="2" class="bar-cell">
        <table class="bar"><tbody><tr>

            <td id="fulltext-cell"><div class="x-form-field-wrap x-form-field-trigger-wrap" id="cq-gen569" style="width: 281px;"><input type="text" size="16" autocomplete="off" id="ext-comp-1298" name="fulltext" class="x-form-text x-form-field fulltextField" style="width: 256px;"><img src="/libs/cq/ui/resources/0.gif" alt="" class="x-form-trigger x-form-search-trigger" id="cq-gen570"></div></td>
            <td id="savedsearch-cell"><table id="saved_query_button" cellspacing="0" class="x-btn x-btn-noicon" style="position: relative; top: 5px; left: 40px; width: 80px; height: 20px;" title="Manage Saved Searches"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen6" class=" x-btn-text">Saved Searches</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td>
            
            <td id="results-cell" style="visibility: visible;"><span id="results">0</span>&nbsp;Results</td>

            <td id="paging-cell">
                
                <span id="paging-wrapper" style="display:none;">
                    <span id="backward" onclick="CQ.search.Util.getQueryBuilder().lastPage();">«</span><!--
                    -->&nbsp;Page&nbsp;<span id="current-page"></span>&nbsp;of&nbsp;<span id="total-pages"></span><!--
                    -->&nbsp;<span id="forward" onclick="CQ.search.Util.getQueryBuilder().nextPage();">»</span>
                </span>
            </td>

            <td class="buttons-cell">
                
                <script type="text/javascript">
                    CQ.Ext.onLoad(function() {
                        var data = {
                            "xtype": "lensdeck",
                            "cls": "lensdeck",
                            "renderTo": "lensdeck-wrapper",
                            "id": "lensdeck"
                        };
                        CQ.dam.Util.setAssetEditorPath("/content/dam/sunpower/asset-share/assetviewer");
                        CQ.search.Util.setLensContainer(CQ.Util.build(data));
                        CQ.search.Util.setDblClickAction(CQ.dam.Util.resultDblClick);
                    });

                </script>
                <div class="lenses parsys"><div class="parbase mosaic section"><div id="lens-mosaic-button-wrapper-1445545965606" class="lens-button-wrapper"><table id="ext-comp-1017" cellspacing="0" class="x-btn x-btn-icon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen11" class=" x-btn-text mosaic">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></div><!--
--><script type="text/javascript">
    CQ.Ext.onLoad(function() {
        var config = {
            "xtype": "dataviewlens",
            "style": "overflow:visible;",
            "renderButtonTo": "lens-mosaic-button-wrapper-1445545965606",
            "proxyConfig": {
                "url": "/bin/wcm/contentfinder/view.json/content/dam"
            },
            "storeConfig": {
                "baseParams": {
                    "mimeType": "image"
                }
            },
            "items": {
                "cls": "lens-dataview mosaic"
            },
            "listeners": {
                "afterlayout": function() {
                    // workaround to set overflow visible
                    var el = this.body || this.el;
                    if(el && !CQ.Ext.isIE){
                        el.setOverflow('visible');
                    }
                }
            }
        };
        var lens = CQ.Util.build(config);
        CQ.search.Util.addLens(lens, "mosaic");

    });
</script>

<cq data-path="/content/dam/sunpower/asset-share/jcr:content/lenses/mosaic" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/lenses/mosaic&quot;,&quot;dialog&quot;:&quot;/libs/cq/search/components/lenses/mosaic/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fcq%2Fsearch%2Fcomponents%2Flenses%2Fmosaic%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Flenses%2Fmosaic&quot;,&quot;dialogClassic&quot;:&quot;/libs/cq/search/components/lenses/mosaic/dialog&quot;,&quot;type&quot;:&quot;cq/search/components/lenses/mosaic&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/lenses|parsys/mosaic|parbase&quot;,&quot;editConfig&quot;:{&quot;listeners&quot;:{&quot;afterremove&quot;:&quot;REFRESH_PAGE&quot;,&quot;aftermove&quot;:&quot;REFRESH_PAGE&quot;,&quot;aftercreate&quot;:&quot;REFRESH_PAGE&quot;,&quot;afterdelete&quot;:&quot;REFRESH_PAGE&quot;,&quot;afteredit&quot;:&quot;REFRESH_PAGE&quot;,&quot;afterinsert&quot;:&quot;REFRESH_PAGE&quot;},&quot;inlineEditing&quot;:CQ.wcm.EditBase.INLINE_MODE_NEVER,&quot;actions&quot;:[CQ.wcm.EditBase.EDIT,CQ.wcm.EditBase.DELETE,CQ.wcm.EditBase.INSERT],&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"cq/search/components/lenses/mosaic","path":"/content/dam/sunpower/asset-share/jcr:content/lenses/mosaic","selectors":null,"servlet":"Script /libs/cq/search/components/lenses/mosaic/mosaic.jsp","totalTime":2,"selfTime":2}-->
<div class="parbase section list">

<div id="lens-list-button-wrapper-1445545965609" class="lens-button-wrapper"><table id="ext-comp-1020" cellspacing="0" class="x-btn x-btn-icon x-btn-pressed"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen13" class=" x-btn-text list">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></div><!--
--><script type="text/javascript">

    CQ.Ext.onLoad(function() {
        var config = {
            "xtype": "dataviewlens",
            "text": "List",
            "renderButtonTo": "lens-list-button-wrapper-1445545965609",
            "overflow": "visible",
            "proxyConfig": {
                "url": "/bin/wcm/contentfinder/view.json/content/dam"
            },
            "storeConfig": {
                "baseParams": {
                    "mimeType": "image"
                }
            },
            "items": {
                "cls": "lens-dataview list",
                "tpl":
                    '<table><tbody>' +
                        '<tr><td class="padding-cell top"><div /></td></tr>' +
                        '<tpl for=".">' +
                            '<tr><td class="padding-cell"></td><td colspan="4" class="line"></td><td class="padding-cell"></td></tr>' +
                            '<tr class="item" ' +
                                ' ondblclick="CQ.search.Util.resultDblClick(event, \'{[CQ.shared.XSS.getXSSValue(values.id)]}\',\'{[CQ.shared.XSS.getXSSValue(values.path)]}\');"' +
                                ' qtip="{[CQ.shared.XSS.getXSSValue(values.shortPath)]}<br/>' +
                                '{[CQ.shared.XSS.getXSSValue(values.name)]}"' +
                                '>' +
                                '<td class="padding-cell"><div /></td>' +
                                '<td class="thumbnail-cell"><div style="background-image:url(\'{[CQ.HTTP.externalize(values.path,true)]}.thumb.48.48{[values.ck ? "." + values.ck : ""]}.png\');" /></td>' +
                                '<td class="title-cell"><div><span class="title">{[CQ.shared.XSS.getXSSValue(values.name)]}</span>{[CQ.shared.XSS.getXSSValue(values.title != values.name ? values.title : "")]}</div></td>' +
                                '<td class="format-cell"><div>{[CQ.shared.XSS.getXSSValue(values.meta["dc:format"] ? values.meta["dc:format"].replace("application/", "") : "")]}</div></td>' +
                                '<td class="last"><div>' +
                                    '{[values.imageDimensions ? values.imageDimensions : ""]}' +
                                    '<br/>' +
                                    // if available show mod date, otherwise creation date
                                    '{[values.modificationDate ? ' +
                                            '"Modified: " + values.modificationDate.format("d\-M\-Y H:i") + "<br/>"' +
                                        ':' +
                                            'values.creationDate ? ' +
                                                    '"Created: " + values.creationDate.format("d\-M\-Y H:i") + "<br/>"' +
                                                ':' +
                                            '""]}' +
                                '</div></td>' +
                                '<td class="padding-cell"><div /></td>' +
                            '</tr>' +
                        '</tpl>' +
                        '<tr><td class="padding-cell bottom"><div /></td></tr>' +
                    '</tbody></table>',
                "itemSelector": ".item"
            },
            "listeners": {
                "afterlayout": function() {
                    var el = this.body || this.el;
                    if(el){
                        el.setOverflow("visible");
                    }
                }
            }
        };
        var lens = CQ.Util.build(config);
        CQ.search.Util.addLens(lens, "list");
    });
</script>

<cq data-path="/content/dam/sunpower/asset-share/jcr:content/lenses/list" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/lenses/list&quot;,&quot;dialog&quot;:&quot;/libs/cq/search/components/lenses/list/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fcq%2Fsearch%2Fcomponents%2Flenses%2Flist%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Flenses%2Flist&quot;,&quot;dialogClassic&quot;:&quot;/libs/cq/search/components/lenses/list/dialog&quot;,&quot;type&quot;:&quot;cq/search/components/lenses/list&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/lenses|parsys/list|parbase&quot;,&quot;editConfig&quot;:{&quot;listeners&quot;:{&quot;afterremove&quot;:&quot;REFRESH_PAGE&quot;,&quot;aftermove&quot;:&quot;REFRESH_PAGE&quot;,&quot;aftercreate&quot;:&quot;REFRESH_PAGE&quot;,&quot;afterdelete&quot;:&quot;REFRESH_PAGE&quot;,&quot;afteredit&quot;:&quot;REFRESH_PAGE&quot;,&quot;afterinsert&quot;:&quot;REFRESH_PAGE&quot;},&quot;inlineEditing&quot;:CQ.wcm.EditBase.INLINE_MODE_NEVER,&quot;actions&quot;:[CQ.wcm.EditBase.EDIT,CQ.wcm.EditBase.DELETE,CQ.wcm.EditBase.INSERT],&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"cq/search/components/lenses/list","path":"/content/dam/sunpower/asset-share/jcr:content/lenses/list","selectors":null,"servlet":"Script /libs/cq/search/components/lenses/list/list.jsp","totalTime":1,"selfTime":1}-->
<div class="new section"><cq data-path="/content/dam/sunpower/asset-share/jcr:content/lenses/*" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/lenses/*&quot;,&quot;type&quot;:&quot;foundation/components/parsys/new&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/lenses|parsys/new&quot;,&quot;editConfig&quot;:{&quot;actions&quot;:[CQ.wcm.EditBase.INSERT],&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"foundation/components/parsys/new","path":"/content/dam/sunpower/asset-share/jcr:content/lenses/*","selectors":null,"servlet":"Script /libs/foundation/components/parsys/new/new.jsp","totalTime":6,"selfTime":6}-->

<cq data-path="/content/dam/sunpower/asset-share/jcr:content/lenses" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/lenses&quot;,&quot;designDialog&quot;:&quot;/libs/foundation/components/parsys/design_dialog&quot;,&quot;designDialogLoadingMode&quot;:&quot;inline&quot;,&quot;designDialogLayout&quot;:&quot;auto&quot;,&quot;designDialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Ffoundation%2Fcomponents%2Fparsys%2Fdesign_dialog&amp;content=%2Fetc%2Fdesigns%2Fassetshare%2Fjcr%3Acontent%2Fassetshare%2Fquerybuilder%2Flenses&quot;,&quot;designDialogClassic&quot;:&quot;/libs/foundation/components/parsys/design_dialog&quot;,&quot;type&quot;:&quot;foundation/components/parsys&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/lenses|parsys&quot;,&quot;isContainer&quot;:true}"></cq>
</div>
<!--cq{"decorated":true,"type":"foundation/components/parsys","path":"/content/dam/sunpower/asset-share/jcr:content/lenses","selectors":null,"servlet":"Script /libs/foundation/components/parsys/parsys.jsp","totalTime":12,"selfTime":3}-->

            </td>
        </tr></tbody></table>
    </td></tr>
    <tr><td colspan="2" class="line postbar"></td></tr>

    <tr>
        <td class="left-cell">
            
            <div id="left-cell-content">
                <div class="left-predicates">
                    <div class="left parsys"><div class="parbase options section">
<div id="cq-predicate-1445545965617" class="optionspredicatebox"><div id="ext-comp-1021" class=" x-panel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen14"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen15"><div id="ext-comp-1024" class=" x-panel leftpadding level0 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen25"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen26"><div id="ext-comp-1025" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen29"><div class="x-form-check-wrap" id="cq-gen30"><input type="checkbox" autocomplete="off" id="ext-comp-1022" name="ext-comp-1022" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1022" class="x-form-cb-label" id="cq-gen31">Tags</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen32"><table id="ext-comp-1023" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen33" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen27"><div id="ext-comp-1027" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen34"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen35"><div id="ext-comp-1030" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen36"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen37"><div id="ext-comp-1031" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen40"><div class="x-form-check-wrap" id="cq-gen41"><input type="checkbox" autocomplete="off" id="ext-comp-1028" name="0_group.property.1_value" class=" x-form-checkbox x-form-field" value="stockphotography:business"><label for="ext-comp-1028" class="x-form-cb-label" id="cq-gen42">Business</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen43"><table id="ext-comp-1029" cellspacing="0" class="x-btn x-btn-noicon collapse"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen44" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen38"><div id="ext-comp-1033" class="x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen63"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen64"><div class="x-form-check-wrap" id="cq-gen65"><input type="checkbox" autocomplete="off" id="ext-comp-1034" name="0_group.property.2_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_abstract"><label for="ext-comp-1034" class="x-form-cb-label" id="cq-gen66">Business Abstract</label></div><div class="x-form-check-wrap" id="cq-gen67"><input type="checkbox" autocomplete="off" id="ext-comp-1035" name="0_group.property.3_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_backgrounds"><label for="ext-comp-1035" class="x-form-cb-label" id="cq-gen68">Business Backgrounds</label></div><div class="x-form-check-wrap" id="cq-gen69"><input type="checkbox" autocomplete="off" id="ext-comp-1036" name="0_group.property.4_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_concepts"><label for="ext-comp-1036" class="x-form-cb-label" id="cq-gen70">Business Concepts</label></div><div class="x-form-check-wrap" id="cq-gen71"><input type="checkbox" autocomplete="off" id="ext-comp-1037" name="0_group.property.5_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_meetings"><label for="ext-comp-1037" class="x-form-cb-label" id="cq-gen72">Business Meetings</label></div><div class="x-form-check-wrap" id="cq-gen73"><input type="checkbox" autocomplete="off" id="ext-comp-1038" name="0_group.property.6_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_people"><label for="ext-comp-1038" class="x-form-cb-label" id="cq-gen74">Business People</label></div><div class="x-form-check-wrap" id="cq-gen75"><input type="checkbox" autocomplete="off" id="ext-comp-1039" name="0_group.property.7_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_symbols_met"><label for="ext-comp-1039" class="x-form-cb-label" id="cq-gen76">Business Symbols/Metaphors</label></div><div class="x-form-check-wrap" id="cq-gen77"><input type="checkbox" autocomplete="off" id="ext-comp-1040" name="0_group.property.8_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_teams"><label for="ext-comp-1040" class="x-form-cb-label" id="cq-gen78">Business Teams</label></div><div class="x-form-check-wrap" id="cq-gen79"><input type="checkbox" autocomplete="off" id="ext-comp-1041" name="0_group.property.9_value" class=" x-form-checkbox x-form-field" value="stockphotography:business/business_travel"><label for="ext-comp-1041" class="x-form-cb-label" id="cq-gen80">Business Travel</label></div></div></div></div></div></div></div><div id="ext-comp-1044" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen45"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen46"><div id="ext-comp-1045" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen49"><div class="x-form-check-wrap" id="cq-gen50"><input type="checkbox" autocomplete="off" id="ext-comp-1042" name="0_group.property.10_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui"><label for="ext-comp-1042" class="x-form-cb-label" id="cq-gen51">Architecture And Buildings</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen52"><table id="ext-comp-1043" cellspacing="0" class="x-btn x-btn-noicon collapse"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen53" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen47"><div id="ext-comp-1047" class="x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen81"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen82"><div class="x-form-check-wrap" id="cq-gen83"><input type="checkbox" autocomplete="off" id="ext-comp-1048" name="0_group.property.11_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui/architectural_detail"><label for="ext-comp-1048" class="x-form-cb-label" id="cq-gen84">Architectural Detail</label></div><div class="x-form-check-wrap" id="cq-gen85"><input type="checkbox" autocomplete="off" id="ext-comp-1049" name="0_group.property.12_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui/architecture_abstrac"><label for="ext-comp-1049" class="x-form-cb-label" id="cq-gen86">Architecture Abstract</label></div><div class="x-form-check-wrap" id="cq-gen87"><input type="checkbox" autocomplete="off" id="ext-comp-1050" name="0_group.property.13_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui/architecture_backgro"><label for="ext-comp-1050" class="x-form-cb-label" id="cq-gen88">Architecture Backgrounds</label></div><div class="x-form-check-wrap" id="cq-gen89"><input type="checkbox" autocomplete="off" id="ext-comp-1051" name="0_group.property.14_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui/churches"><label for="ext-comp-1051" class="x-form-cb-label" id="cq-gen90">Churches</label></div><div class="x-form-check-wrap" id="cq-gen91"><input type="checkbox" autocomplete="off" id="ext-comp-1052" name="0_group.property.15_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui/homes"><label for="ext-comp-1052" class="x-form-cb-label" id="cq-gen92">Homes</label></div><div class="x-form-check-wrap" id="cq-gen93"><input type="checkbox" autocomplete="off" id="ext-comp-1053" name="0_group.property.16_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui/monuments"><label for="ext-comp-1053" class="x-form-cb-label" id="cq-gen94">Monuments</label></div><div class="x-form-check-wrap" id="cq-gen95"><input type="checkbox" autocomplete="off" id="ext-comp-1054" name="0_group.property.17_value" class=" x-form-checkbox x-form-field" value="stockphotography:architecture_and_bui/office_buildings"><label for="ext-comp-1054" class="x-form-cb-label" id="cq-gen96">Office Buildings</label></div></div></div></div></div></div></div><div id="ext-comp-1057" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen54"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen55"><div id="ext-comp-1058" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen58"><div class="x-form-check-wrap" id="cq-gen59"><input type="checkbox" autocomplete="off" id="ext-comp-1055" name="0_group.property.18_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel"><label for="ext-comp-1055" class="x-form-cb-label" id="cq-gen60">Locations And Travel</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen61"><table id="ext-comp-1056" cellspacing="0" class="x-btn x-btn-noicon collapse"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen62" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen56"><div id="ext-comp-1060" class="x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen97"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen98"><div class="x-form-check-wrap" id="cq-gen99"><input type="checkbox" autocomplete="off" id="ext-comp-1061" name="0_group.property.19_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel/air_travel"><label for="ext-comp-1061" class="x-form-cb-label" id="cq-gen100">Air Travel</label></div><div class="x-form-check-wrap" id="cq-gen101"><input type="checkbox" autocomplete="off" id="ext-comp-1062" name="0_group.property.20_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel/beaches"><label for="ext-comp-1062" class="x-form-cb-label" id="cq-gen102">Beaches</label></div><div class="x-form-check-wrap" id="cq-gen103"><input type="checkbox" autocomplete="off" id="ext-comp-1063" name="0_group.property.21_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel/holidays"><label for="ext-comp-1063" class="x-form-cb-label" id="cq-gen104">Holidays</label></div><div class="x-form-check-wrap" id="cq-gen105"><input type="checkbox" autocomplete="off" id="ext-comp-1064" name="0_group.property.22_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel/landmarks"><label for="ext-comp-1064" class="x-form-cb-label" id="cq-gen106">Landmarks</label></div><div class="x-form-check-wrap" id="cq-gen107"><input type="checkbox" autocomplete="off" id="ext-comp-1065" name="0_group.property.23_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel/railway"><label for="ext-comp-1065" class="x-form-cb-label" id="cq-gen108">Railway</label></div><div class="x-form-check-wrap" id="cq-gen109"><input type="checkbox" autocomplete="off" id="ext-comp-1066" name="0_group.property.24_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel/subway"><label for="ext-comp-1066" class="x-form-cb-label" id="cq-gen110">Subway</label></div><div class="x-form-check-wrap" id="cq-gen111"><input type="checkbox" autocomplete="off" id="ext-comp-1067" name="0_group.property.25_value" class=" x-form-checkbox x-form-field" value="stockphotography:locations_and_travel/travel_backgrounds"><label for="ext-comp-1067" class="x-form-cb-label" id="cq-gen112">Travel Backgrounds</label></div></div></div></div></div></div></div></div></div></div></div></div></div><input type="hidden" size="20" autocomplete="off" id="ext-comp-1068" name="0_group.property" class=" x-form-hidden x-form-field" value="jcr:content/metadata/cq:tags"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1069" name="0_group.p.or" class=" x-form-hidden x-form-field" value="true"></div></div></div></div>
<script type="text/javascript">

    CQ.Ext.onLoad(function() {

        var CQ_search_optionsPredicate = {
            "counter": 0,
            "controls": {},
            "title": "Tags",
            "predicateName": "",
            "propertyPath": "jcr:content\/metadata\/cq:tags",
            "groupId": CQ.search.Util.getQueryBuilder().createGroupId(),
            "collapse": "level1",
            "searchTimeoutId": 0,
            "searchTimeoutTime": 800,
            "triggerSearch": true,
            "paths": ["\/etc\/tags\/stockphotography\/business","\/etc\/tags\/stockphotography\/architecture_and_bui","\/etc\/tags\/stockphotography\/locations_and_travel"],


            init: function() {
                this.panel = new CQ.Ext.Panel({
                    "renderTo": "cq-predicate-1445545965617",
                    "border": false
                });

                this.options = this.getOptions();

                if (this.title) {
                    // add additional top level
                    this.options = {
                        "jcr:title": this.title,
                        subs: this.options
                    };
                }

                this.traverseOption(this.options, this.panel, 0, "");

                // add hidden after traverse options to keep panel items[0] (for collapse)
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + "." + this.predicateName,
                    "value": this.propertyPath
                }));
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + ".p.or",
                    "value": "true"
                }));

                switch (this.collapse) {
                    case "none":
                        break;
                    case "level0":
                        this.toggle(this.panel.items.get(0));
                        break;
                    default:
                        // hide sub panels
                        var p0 = this.panel.items.get(0);
                        if (p0.subPanel) {
                            var c = p0.subPanel.items.getCount();
                            for (var i = 0; i < c; i++) {
                                this.toggle(p0.subPanel.items.get(i));
                            }
                        }
                }

                this.panel.doLayout();
            },

            /**
             * Requests the options
             * @private
             */
            getOptions: function() {
                var options = {};

                for (var i = 0; i < this.paths.length; i++) {
                    var tagId = "";
                    var path = this.paths[i];

                    if (path.lastIndexOf(".json") != path.length - ".json".length) {
                        // do not touch paths that ends with ".json" already
                        // otherwise add ".infinity.json"

                        // workaround to allow handling of tags with .infinity.json (which does not provide the tagId):
                        // the tagId is build from the path
                        if (path.indexOf("/etc/tags") == 0) {
                            //todo: switch to tagid predicate (if not overwritten in component config)
                            //if (!this.predicateName) predicateName = "tagid";

                            tagId = path.replace("/etc/tags", "");
                            if (tagId === "") {
                                // optionsPath is the tag root path, e.g. "/etc/tags" => ":"
                                // colon is used later on to identify root path
                                tagId = ":";
                            }
                            else {
                                tagId = tagId.replace("/", "");
                                if (tagId.indexOf("/") != -1) {
                                    // optionsPath is a tag's path, e.g. "/etc/tags/stockphotography/animals" => "stockphotography:animals"
                                    tagId = tagId.replace("/", ":");
                                }
                                // else optionsPath is a namespace's path, e.g. "/etc/tags/stockphotography" => "stockphotography"
                            }
                        }

                        path += ".infinity.json";
                    }

                    var resp = CQ.HTTP.eval(path);
                    if (!resp) continue;
                    if (resp instanceof Array) {
                        for (var j=0;j<resp.length; j++) {
                            options["o" + i + "_" + j] = resp[j];
                            options["o" + i + "_" + j].tagId = tagId;
                        }
                    } else {
                        options["o" + i] = resp;
                        options["o" + i].tagId = tagId;
                    }

                }
                if (!this.predicateName) this.predicateName = "property";

                return options;
            },

            /**
             * Checks if an option has sub options.
             * @private
             */
            isLeaf: function(option) {
                for (property in option) {
                    if (CQ.Ext.type(option[property]) == "object") {
                        return false;
                    }
                }
                return true;
            },

            /**
             * Unchecks the checkboxes of the parents (titles) of a widget.
             * @param widget The widget
             * @private
             */
            uncheckParents: function(widget) {
                while (widget) {
                    widget = widget.findParentBy(function(panel) {
                        if (panel.titleCheckbox) return true;
                    });
                    if (widget) widget.titleCheckbox.setValue(false, true);
                }
                return true;
            },

            /**
             * Expands resp. collapses the specified panel.
             * @param panel
             */
            toggle: function(panel) {
                if (!panel.subPanel) return;
                if (panel.subPanel.hidden) {
                    panel.toggle.removeClass("expand");
                    panel.toggle.addClass("collapse");
                    panel.subPanel.show();
                    // because of hideMode="offsets" IE requires that every
                    // item is shown to properly display the sub panels
                    for (var i = 0; i < panel.subPanel.items.getCount(); i++) {
                        panel.subPanel.items.get(i).show();
                    }
                }
                else {
                    panel.toggle.removeClass("collapse");
                    panel.toggle.addClass("expand");
                    panel.subPanel.hide();
                }
            },

            /**
             * Submits the Query Builder after a short timeout. Thanks to the timeout
             * it is possible to check/uncheck multiple checkboxes without
             * triggering a search every time.
             * @private
             */
            search: function() {
                if (this.triggerSearch) {
                    window.clearTimeout(this.searchTimeoutId);
                    this.searchTimeoutId = window.setTimeout(function() {
                        var qb = CQ.search.Util.getQueryBuilder();
                        if (qb) CQ.search.Util.getQueryBuilder().submit();
                    }, this.searchTimeoutTime);
                }
            },

            /**
             * Renders the specified option and traverses its sub options.
             * @param option The option
             * @param parentPanel The panel where this option is added to
             * @param level The level - required for CSS classes
             * @param tagId The prefix for tag ids (optional)
             * @private
             */
            traverseOption: function(option, parentPanel, level, tagId) {

                // the option is tag => pass tag id to the sub options
                if (option.tagId) tagId = option.tagId;

                if (!this.isLeaf(option)) {
                    // title option with sub options

                    var panel;

                    if (option["jcr:title"]) {
                        // option has a title: draw title with a checkbox to check/uncheck the entire group

                        var name = "";
                        var value = "";
                        if (tagId && (tagId != ":" || tagId.indexOf(":") == -1)) {
                            // "tag titles" are tags itself and need to be submitted
                            this.counter++;
                            name = this.groupId + "." +  this.predicateName + "." + this.counter + "_value";
                            value = tagId;
                        }

                        var checkbox = new CQ.Ext.form.Checkbox({
                            "boxLabel": option["jcr:title"],
                            "inputValue": value,
                            "name": name
                        });

                        // toggle button to toggle the subPanel
                        var toggle = new CQ.Ext.Button({
                            "cls": "collapse"
                        });

                        panel = new CQ.Ext.Panel({
                            "cls": "leftpadding level" + level,
                            "border": false,
                            "toolTarget": "toolbar",
                            "tbar": [
                                checkbox,
                                "->",
                                toggle
                             ]
                        });

                        checkbox.on("check", function(cbox, checked) {
                            if (!checked) CQ_search_optionsPredicate.uncheckParents(cbox);
                            CQ_search_optionsPredicate.search();
                            panel.cascade(function(o) {
                                if (o instanceof CQ.Ext.form.Checkbox) {
                                    o.setValue(checked, true);
                                }
                                else if (o.titleCheckbox) {
                                    o.titleCheckbox.setValue(checked, true);
                                }
                                return true;
                            });
                        });

                        var op = this;
                        toggle.on("click", function() {
                            op.toggle(panel);
                        });


                        panel.toggle = toggle;
                        panel.titleCheckbox = checkbox;

                        // add panel for sub items
                        panel.subPanel = new CQ.Ext.Panel({
                            "border":false,
                            "cls": "subpanel",
                            "hideMode": "offsets"
                        });
                        panel.add(panel.subPanel);

                        parentPanel.add(panel);

                        level++;
                    }

                    for (var sub in option) {
                        if (CQ.Ext.type(option[sub]) == "object") {
                            var nextTagId = "";
                            if (tagId) {
                                if (tagId == ":") {
                                    // tag root: sub are namespaces
                                    nextTagId = sub + ":";
                                }
                                else if (tagId.indexOf(":") == -1) {
                                    // tagId is namespace
                                    nextTagId = tagId + ":" + sub;
                                }
                                else {
                                    // tagId is tag
                                    nextTagId = tagId + "/" + sub;
                                }
                            }
                            this.traverseOption(option[sub], panel ? panel.subPanel : parentPanel, level, nextTagId);
                        }
                    }
                }
                else {
                    // leaf option

                    this.counter++;
                    var value = option["value"] ? option["value"] : "";
                    if (!value && tagId) value = tagId;
                    var title = option["jcr:title"] ? option["jcr:title"] : value;

                    var checkbox = new CQ.Ext.form.Checkbox({
                        "boxLabel": title,
                        "name": this.groupId + "." +  this.predicateName + "." + this.counter + "_value",
                        "inputValue": value
                    });

                    // register the checkbox
                    //todo: not save: same value in different fieldsets possible
                    this.controls[option["value"]] = checkbox;

                    checkbox.on("check", function(cbox, checked) {
                        if (!checked) {
                            // uncheck leaf checkbox: uncheck according fieldset checkboxes
                            CQ_search_optionsPredicate.uncheckParents(cbox);
                        }

                        CQ_search_optionsPredicate.search();
                    });

//                    checkbox.on("hide", function(e) {
//                        e.findParentByType("fieldset").bubble(function(o){
//                            var checkboxes = o.findByType("checkbox");
//                            var onevisible = false;
//                            for (var i=0;i<checkboxes.length;i++) {
//                                if (checkboxes[i].isVisible()||checkboxes[i].getValue()) {
//                                    onevisible = true;
//                                }
//                                if (onevisible) {
//                                    o.show();
//                                } else {
//                                  o.hide();
//                                }
//                            }
//                            return true;
//                            });
//                        });

                    parentPanel.add(checkbox);
                }
            },

            update: function(result) {
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                    control.hits = 0;
//                }
//
//                for (var fac in result.facets) {
//                    var facet = result.facets[fac];
//                    for (var i=0;i<facet.length;i++) {
//                        if (this.controls[facet[i].value]!=undefined) {
//                            var control =  this.controls[facet[i].value];
//                            control.hits = facet[i].count;
//
//                            control.labelEl.dom.innerHTML = control.boxLabel + " (" + facet[i].count + ")";
//
//                            //this.controls[facet[i].value].labelEl.dom.innerHTML = "foo";
//                            // = this.controls[facet[i].value].boxLabel + "
////                                console.log("found: " + this.controls[facet[i].value] + " " + facet[i].count);
//                        } else {
////                                console.log("uncategorized: " + facet[i].value);
//                        }
//                    }
//                    break;//all groups are the same
//                }

                //todo: problem on 09-09-16: hides entire control on initial search
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                        if (control.hits==0&&control.getValue!=true) {
//                            control.hide();
//                        } else {
//                            control.show();
//                        }
//                    }
              }
        };

        CQ_search_optionsPredicate.init();
        CQ.search.Util.getQueryBuilder().on("loadResult", CQ_search_optionsPredicate.update, CQ_search_optionsPredicate);

});
</script>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_0" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_0&quot;,&quot;dialog&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fcq%2Fsearch%2Fcomponents%2Fpredicates%2Foptions%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Fquerybuilder%2Fleft%2Foptions_0&quot;,&quot;dialogClassic&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;type&quot;:&quot;cq/search/components/predicates/options&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys/options|parbase&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"cq/search/components/predicates/options","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_0","selectors":null,"servlet":"Script /libs/cq/search/components/predicates/options/options.jsp","totalTime":3,"selfTime":3}-->
<div class="parbase options section">
<div id="cq-predicate-1445545965620" class="optionspredicatebox"><div id="ext-comp-1070" class=" x-panel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen113"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen114"><div id="ext-comp-1073" class=" x-panel leftpadding level0 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen156"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen157"><div id="ext-comp-1074" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen160"><div class="x-form-check-wrap" id="cq-gen161"><input type="checkbox" autocomplete="off" id="ext-comp-1071" name="ext-comp-1071" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1071" class="x-form-cb-label" id="cq-gen162">File Types</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen163"><table id="ext-comp-1072" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen164" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen158"><div id="ext-comp-1076" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen165"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen166"><div id="ext-comp-1079" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen167"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen168"><div id="ext-comp-1080" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen171"><div class="x-form-check-wrap" id="cq-gen172"><input type="checkbox" autocomplete="off" id="ext-comp-1077" name="ext-comp-1077" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1077" class="x-form-cb-label" id="cq-gen173">Images</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen174"><table id="ext-comp-1078" cellspacing="0" class="x-btn x-btn-noicon expand"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen175" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen169"><div id="ext-comp-1082" class="x-panel subpanel x-panel-noborder x-hide-offsets"><div class="x-panel-bwrap" id="cq-gen212"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen213"><div id="ext-comp-1085" class="x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen214"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen215"><div id="ext-comp-1086" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen218"><div class="x-form-check-wrap" id="cq-gen219"><input type="checkbox" autocomplete="off" id="ext-comp-1083" name="ext-comp-1083" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1083" class="x-form-cb-label" id="cq-gen220">Web-enabled</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen221"><table id="ext-comp-1084" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen222" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen216"><div id="ext-comp-1088" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen250"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen251"><div class="x-form-check-wrap" id="cq-gen252"><input type="checkbox" autocomplete="off" id="ext-comp-1089" name="1_group.property.1_value" class=" x-form-checkbox x-form-field" value="image/jpeg"><label for="ext-comp-1089" class="x-form-cb-label" id="cq-gen253">JPEG</label></div><div class="x-form-check-wrap" id="cq-gen254"><input type="checkbox" autocomplete="off" id="ext-comp-1090" name="1_group.property.2_value" class=" x-form-checkbox x-form-field" value="image/gif"><label for="ext-comp-1090" class="x-form-cb-label" id="cq-gen255">GIF</label></div><div class="x-form-check-wrap" id="cq-gen256"><input type="checkbox" autocomplete="off" id="ext-comp-1091" name="1_group.property.3_value" class=" x-form-checkbox x-form-field" value="image/png"><label for="ext-comp-1091" class="x-form-cb-label" id="cq-gen257">PNG</label></div><div class="x-form-check-wrap" id="cq-gen258"><input type="checkbox" autocomplete="off" id="ext-comp-1092" name="1_group.property.4_value" class=" x-form-checkbox x-form-field" value="image/pjpeg"><label for="ext-comp-1092" class="x-form-cb-label" id="cq-gen259">PJPEG</label></div></div></div></div></div></div></div><div id="ext-comp-1095" class="x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen223"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen224"><div id="ext-comp-1096" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen227"><div class="x-form-check-wrap" id="cq-gen228"><input type="checkbox" autocomplete="off" id="ext-comp-1093" name="ext-comp-1093" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1093" class="x-form-cb-label" id="cq-gen229">Bitmaps</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen230"><table id="ext-comp-1094" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen231" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen225"><div id="ext-comp-1098" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen260"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen261"><div class="x-form-check-wrap" id="cq-gen262"><input type="checkbox" autocomplete="off" id="ext-comp-1099" name="1_group.property.5_value" class=" x-form-checkbox x-form-field" value="image/tiff"><label for="ext-comp-1099" class="x-form-cb-label" id="cq-gen263">TIFF</label></div><div class="x-form-check-wrap" id="cq-gen264"><input type="checkbox" autocomplete="off" id="ext-comp-1100" name="1_group.property.6_value" class=" x-form-checkbox x-form-field" value="image/vnd.adobe.photoshop"><label for="ext-comp-1100" class="x-form-cb-label" id="cq-gen265">Adobe Photoshop</label></div><div class="x-form-check-wrap" id="cq-gen266"><input type="checkbox" autocomplete="off" id="ext-comp-1101" name="1_group.property.7_value" class=" x-form-checkbox x-form-field" value="image/x-xcf"><label for="ext-comp-1101" class="x-form-cb-label" id="cq-gen267">GIMP Images</label></div><div class="x-form-check-wrap" id="cq-gen268"><input type="checkbox" autocomplete="off" id="ext-comp-1102" name="1_group.property.8_value" class=" x-form-checkbox x-form-field" value="image/x-bmp"><label for="ext-comp-1102" class="x-form-cb-label" id="cq-gen269">Windows Bitmap</label></div><div class="x-form-check-wrap" id="cq-gen270"><input type="checkbox" autocomplete="off" id="ext-comp-1103" name="1_group.property.9_value" class=" x-form-checkbox x-form-field" value="image/vnd.microsoft.icon"><label for="ext-comp-1103" class="x-form-cb-label" id="cq-gen271">Windows Icons</label></div><div class="x-form-check-wrap" id="cq-gen272"><input type="checkbox" autocomplete="off" id="ext-comp-1104" name="1_group.property.10_value" class=" x-form-checkbox x-form-field" value="image/bmp"><label for="ext-comp-1104" class="x-form-cb-label" id="cq-gen273">Bitmap</label></div><div class="x-form-check-wrap" id="cq-gen274"><input type="checkbox" autocomplete="off" id="ext-comp-1105" name="1_group.property.11_value" class=" x-form-checkbox x-form-field" value="image/x-ppm"><label for="ext-comp-1105" class="x-form-cb-label" id="cq-gen275">PBM Portable Pixelmap Graphic</label></div><div class="x-form-check-wrap" id="cq-gen276"><input type="checkbox" autocomplete="off" id="ext-comp-1106" name="1_group.property.12_value" class=" x-form-checkbox x-form-field" value="image/x-pbm"><label for="ext-comp-1106" class="x-form-cb-label" id="cq-gen277">Portable Pixelmap Graphic</label></div><div class="x-form-check-wrap" id="cq-gen278"><input type="checkbox" autocomplete="off" id="ext-comp-1107" name="1_group.property.13_value" class=" x-form-checkbox x-form-field" value="image/pbm"><label for="ext-comp-1107" class="x-form-cb-label" id="cq-gen279">PBM Portable Any Map Graphic</label></div></div></div></div></div></div></div><div id="ext-comp-1110" class="x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen232"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen233"><div id="ext-comp-1111" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen236"><div class="x-form-check-wrap" id="cq-gen237"><input type="checkbox" autocomplete="off" id="ext-comp-1108" name="ext-comp-1108" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1108" class="x-form-cb-label" id="cq-gen238">Vector Images</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen239"><table id="ext-comp-1109" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen240" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen234"><div id="ext-comp-1113" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen280"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen281"><div class="x-form-check-wrap" id="cq-gen282"><input type="checkbox" autocomplete="off" id="ext-comp-1114" name="1_group.property.14_value" class=" x-form-checkbox x-form-field" value="application/postscript"><label for="ext-comp-1114" class="x-form-cb-label" id="cq-gen283">Adobe Illustrator</label></div><div class="x-form-check-wrap" id="cq-gen284"><input type="checkbox" autocomplete="off" id="ext-comp-1115" name="1_group.property.15_value" class=" x-form-checkbox x-form-field" value="application/vnd.oasis.opendocument.graphics"><label for="ext-comp-1115" class="x-form-cb-label" id="cq-gen285">OpenDocument Graphics</label></div><div class="x-form-check-wrap" id="cq-gen286"><input type="checkbox" autocomplete="off" id="ext-comp-1116" name="1_group.property.16_value" class=" x-form-checkbox x-form-field" value="image/svg+xml"><label for="ext-comp-1116" class="x-form-cb-label" id="cq-gen287">Scalable Vector Graphics</label></div></div></div></div></div></div></div><div id="ext-comp-1119" class="x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen241"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen242"><div id="ext-comp-1120" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen245"><div class="x-form-check-wrap" id="cq-gen246"><input type="checkbox" autocomplete="off" id="ext-comp-1117" name="ext-comp-1117" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1117" class="x-form-cb-label" id="cq-gen247">Raw Images</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen248"><table id="ext-comp-1118" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen249" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen243"><div id="ext-comp-1122" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen288"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen289"><div class="x-form-check-wrap" id="cq-gen290"><input type="checkbox" autocomplete="off" id="ext-comp-1123" name="1_group.property.17_value" class=" x-form-checkbox x-form-field" value="image/x-adobe-dng"><label for="ext-comp-1123" class="x-form-cb-label" id="cq-gen291">Adobe DNG</label></div><div class="x-form-check-wrap" id="cq-gen292"><input type="checkbox" autocomplete="off" id="ext-comp-1124" name="1_group.property.18_value" class=" x-form-checkbox x-form-field" value="image/x-dcraw"><label for="ext-comp-1124" class="x-form-cb-label" id="cq-gen293">Cannon Camera Raw</label></div><div class="x-form-check-wrap" id="cq-gen294"><input type="checkbox" autocomplete="off" id="ext-comp-1125" name="1_group.property.19_value" class=" x-form-checkbox x-form-field" value="image/x-dcraw"><label for="ext-comp-1125" class="x-form-cb-label" id="cq-gen295">Nikon Camera Raw</label></div><div class="x-form-check-wrap" id="cq-gen296"><input type="checkbox" autocomplete="off" id="ext-comp-1126" name="1_group.property.20_value" class=" x-form-checkbox x-form-field" value="image/raw"><label for="ext-comp-1126" class="x-form-cb-label" id="cq-gen297">Nikon Raw</label></div></div></div></div></div></div></div></div></div></div></div></div></div><div id="ext-comp-1129" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen176"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen177"><div id="ext-comp-1130" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen180"><div class="x-form-check-wrap" id="cq-gen181"><input type="checkbox" autocomplete="off" id="ext-comp-1127" name="ext-comp-1127" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1127" class="x-form-cb-label" id="cq-gen182">Documents</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen183"><table id="ext-comp-1128" cellspacing="0" class="x-btn expand x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen184" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen178"><div id="ext-comp-1132" class=" x-panel subpanel x-panel-noborder x-hide-offsets"><div class="x-panel-bwrap" id="cq-gen298"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen299"><div id="ext-comp-1135" class=" x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen300"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen301"><div id="ext-comp-1136" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen304"><div class="x-form-check-wrap" id="cq-gen305"><input type="checkbox" autocomplete="off" id="ext-comp-1133" name="ext-comp-1133" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1133" class="x-form-cb-label" id="cq-gen306">Word Processing</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen307"><table id="ext-comp-1134" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen308" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen302"><div id="ext-comp-1138" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen336"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen337"><div id="ext-comp-1141" class=" x-panel leftpadding level3 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen338"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen339"><div id="ext-comp-1142" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen342"><div class="x-form-check-wrap" id="cq-gen343"><input type="checkbox" autocomplete="off" id="ext-comp-1139" name="ext-comp-1139" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1139" class="x-form-cb-label" id="cq-gen344">Microsoft Word</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen345"><table id="ext-comp-1140" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen346" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen340"><div id="ext-comp-1144" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen359"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen360"><div class="x-form-check-wrap" id="cq-gen361"><input type="checkbox" autocomplete="off" id="ext-comp-1145" name="1_group.property.21_value" class=" x-form-checkbox x-form-field" value="application/msword"><label for="ext-comp-1145" class="x-form-cb-label" id="cq-gen362">Microsoft Word (Office 97-2004)</label></div><div class="x-form-check-wrap" id="cq-gen363"><input type="checkbox" autocomplete="off" id="ext-comp-1146" name="1_group.property.22_value" class=" x-form-checkbox x-form-field" value="application/vnd.openxmlformats-officedocument.wordprocessingml.document"><label for="ext-comp-1146" class="x-form-cb-label" id="cq-gen364">Microsoft Word (Office 2007)</label></div></div></div></div></div></div></div><div class="x-form-check-wrap" id="cq-gen347"><input type="checkbox" autocomplete="off" id="ext-comp-1147" name="1_group.property.23_value" class=" x-form-checkbox x-form-field" value="application/vnd.oasis.opendocument.text"><label for="ext-comp-1147" class="x-form-cb-label" id="cq-gen348">OpenDocument Text</label></div><div class="x-form-check-wrap" id="cq-gen349"><input type="checkbox" autocomplete="off" id="ext-comp-1148" name="1_group.property.24_value" class=" x-form-checkbox x-form-field" value="application/pdf"><label for="ext-comp-1148" class="x-form-cb-label" id="cq-gen350">PDF</label></div><div class="x-form-check-wrap" id="cq-gen351"><input type="checkbox" autocomplete="off" id="ext-comp-1149" name="1_group.property.25_value" class=" x-form-checkbox x-form-field" value="text/html"><label for="ext-comp-1149" class="x-form-cb-label" id="cq-gen352">HTML Hypertext</label></div><div class="x-form-check-wrap" id="cq-gen353"><input type="checkbox" autocomplete="off" id="ext-comp-1150" name="1_group.property.26_value" class=" x-form-checkbox x-form-field" value="text/rtf"><label for="ext-comp-1150" class="x-form-cb-label" id="cq-gen354">Rich Text Format</label></div><div class="x-form-check-wrap" id="cq-gen355"><input type="checkbox" autocomplete="off" id="ext-comp-1151" name="1_group.property.27_value" class=" x-form-checkbox x-form-field" value="text/plain"><label for="ext-comp-1151" class="x-form-cb-label" id="cq-gen356">Plain Text</label></div><div class="x-form-check-wrap" id="cq-gen357"><input type="checkbox" autocomplete="off" id="ext-comp-1152" name="1_group.property.28_value" class=" x-form-checkbox x-form-field" value="application/vnd.openxmlformats-officedocument.wordprocessingml.document"><label for="ext-comp-1152" class="x-form-cb-label" id="cq-gen358">Microsoft Word (Docx)</label></div></div></div></div></div></div></div><div id="ext-comp-1155" class=" x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen309"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen310"><div id="ext-comp-1156" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen313"><div class="x-form-check-wrap" id="cq-gen314"><input type="checkbox" autocomplete="off" id="ext-comp-1153" name="ext-comp-1153" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1153" class="x-form-cb-label" id="cq-gen315">Spreadsheets</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen316"><table id="ext-comp-1154" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen317" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen311"><div id="ext-comp-1158" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen365"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen366"><div class="x-form-check-wrap" id="cq-gen367"><input type="checkbox" autocomplete="off" id="ext-comp-1159" name="1_group.property.29_value" class=" x-form-checkbox x-form-field" value="application/vnd.oasis.opendocument.spreadsheet"><label for="ext-comp-1159" class="x-form-cb-label" id="cq-gen368">OpenDocument Spreadsheets</label></div><div id="ext-comp-1162" class=" x-panel leftpadding level3 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen369"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen370"><div id="ext-comp-1163" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen373"><div class="x-form-check-wrap" id="cq-gen374"><input type="checkbox" autocomplete="off" id="ext-comp-1160" name="ext-comp-1160" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1160" class="x-form-cb-label" id="cq-gen375">Microsoft Excel</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen376"><table id="ext-comp-1161" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen377" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen371"><div id="ext-comp-1165" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen378"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen379"><div class="x-form-check-wrap" id="cq-gen380"><input type="checkbox" autocomplete="off" id="ext-comp-1166" name="1_group.property.30_value" class=" x-form-checkbox x-form-field" value="application/vnd.ms-excel"><label for="ext-comp-1166" class="x-form-cb-label" id="cq-gen381">Microsoft Excel (Office 97-2004)</label></div><div class="x-form-check-wrap" id="cq-gen382"><input type="checkbox" autocomplete="off" id="ext-comp-1167" name="1_group.property.31_value" class=" x-form-checkbox x-form-field" value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"><label for="ext-comp-1167" class="x-form-cb-label" id="cq-gen383">Microsoft Excel (Office 2007)</label></div></div></div></div></div></div></div></div></div></div></div></div></div><div id="ext-comp-1170" class=" x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen318"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen319"><div id="ext-comp-1171" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen322"><div class="x-form-check-wrap" id="cq-gen323"><input type="checkbox" autocomplete="off" id="ext-comp-1168" name="ext-comp-1168" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1168" class="x-form-cb-label" id="cq-gen324">Presentation</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen325"><table id="ext-comp-1169" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen326" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen320"><div id="ext-comp-1173" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen384"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen385"><div class="x-form-check-wrap" id="cq-gen386"><input type="checkbox" autocomplete="off" id="ext-comp-1174" name="1_group.property.32_value" class=" x-form-checkbox x-form-field" value="application/vnd.oasis.opendocument.presentation"><label for="ext-comp-1174" class="x-form-cb-label" id="cq-gen387">OpenDocument Presentations</label></div><div id="ext-comp-1177" class=" x-panel leftpadding level3 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen388"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen389"><div id="ext-comp-1178" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen392"><div class="x-form-check-wrap" id="cq-gen393"><input type="checkbox" autocomplete="off" id="ext-comp-1175" name="ext-comp-1175" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1175" class="x-form-cb-label" id="cq-gen394">Microsoft Powerpoint</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen395"><table id="ext-comp-1176" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen396" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen390"><div id="ext-comp-1180" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen397"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen398"><div class="x-form-check-wrap" id="cq-gen399"><input type="checkbox" autocomplete="off" id="ext-comp-1181" name="1_group.property.33_value" class=" x-form-checkbox x-form-field" value="application/vnd.ms-powerpoint"><label for="ext-comp-1181" class="x-form-cb-label" id="cq-gen400">Microsoft Powerpoint (Office 97-2004)</label></div><div class="x-form-check-wrap" id="cq-gen401"><input type="checkbox" autocomplete="off" id="ext-comp-1182" name="1_group.property.34_value" class=" x-form-checkbox x-form-field" value="application/vnd.openxmlformats-officedocument.presentationml.presentation"><label for="ext-comp-1182" class="x-form-cb-label" id="cq-gen402">Microsoft Powerpoint (2007)</label></div></div></div></div></div></div></div></div></div></div></div></div></div><div id="ext-comp-1185" class=" x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen327"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen328"><div id="ext-comp-1186" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen331"><div class="x-form-check-wrap" id="cq-gen332"><input type="checkbox" autocomplete="off" id="ext-comp-1183" name="ext-comp-1183" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1183" class="x-form-cb-label" id="cq-gen333">Pre-Print</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen334"><table id="ext-comp-1184" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen335" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen329"><div id="ext-comp-1188" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen403"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen404"><div class="x-form-check-wrap" id="cq-gen405"><input type="checkbox" autocomplete="off" id="ext-comp-1189" name="1_group.property.35_value" class=" x-form-checkbox x-form-field" value="application/x-indesign"><label for="ext-comp-1189" class="x-form-cb-label" id="cq-gen406">Adobe InDesign</label></div><div class="x-form-check-wrap" id="cq-gen407"><input type="checkbox" autocomplete="off" id="ext-comp-1190" name="1_group.property.36_value" class=" x-form-checkbox x-form-field" value="application/postscript"><label for="ext-comp-1190" class="x-form-cb-label" id="cq-gen408">Adobe PostScript</label></div><div class="x-form-check-wrap" id="cq-gen409"><input type="checkbox" autocomplete="off" id="ext-comp-1191" name="1_group.property.37_value" class=" x-form-checkbox x-form-field" value="application/pdf"><label for="ext-comp-1191" class="x-form-cb-label" id="cq-gen410">PDF</label></div><div class="x-form-check-wrap" id="cq-gen411"><input type="checkbox" autocomplete="off" id="ext-comp-1192" name="1_group.property.38_value" class=" x-form-checkbox x-form-field" value="application.vnd.quark.quarkxpress"><label for="ext-comp-1192" class="x-form-cb-label" id="cq-gen412">Quark XPress</label></div></div></div></div></div></div></div></div></div></div></div></div></div><div id="ext-comp-1195" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen185"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen186"><div id="ext-comp-1196" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen189"><div class="x-form-check-wrap" id="cq-gen190"><input type="checkbox" autocomplete="off" id="ext-comp-1193" name="ext-comp-1193" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1193" class="x-form-cb-label" id="cq-gen191">Multimedia</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen192"><table id="ext-comp-1194" cellspacing="0" class="x-btn expand x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen193" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen187"><div id="ext-comp-1198" class=" x-panel subpanel x-panel-noborder x-hide-offsets"><div class="x-panel-bwrap" id="cq-gen413"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen414"><div id="ext-comp-1201" class=" x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen415"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen416"><div id="ext-comp-1202" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen419"><div class="x-form-check-wrap" id="cq-gen420"><input type="checkbox" autocomplete="off" id="ext-comp-1199" name="ext-comp-1199" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1199" class="x-form-cb-label" id="cq-gen421">Audio</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen422"><table id="ext-comp-1200" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen423" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen417"><div id="ext-comp-1204" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen442"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen443"><div class="x-form-check-wrap" id="cq-gen444"><input type="checkbox" autocomplete="off" id="ext-comp-1205" name="1_group.property.39_value" class=" x-form-checkbox x-form-field" value="audio/x-aac"><label for="ext-comp-1205" class="x-form-cb-label" id="cq-gen445">AAC Audio</label></div><div class="x-form-check-wrap" id="cq-gen446"><input type="checkbox" autocomplete="off" id="ext-comp-1206" name="1_group.property.40_value" class=" x-form-checkbox x-form-field" value="audio/midi"><label for="ext-comp-1206" class="x-form-cb-label" id="cq-gen447">MIDI</label></div><div class="x-form-check-wrap" id="cq-gen448"><input type="checkbox" autocomplete="off" id="ext-comp-1207" name="1_group.property.41_value" class=" x-form-checkbox x-form-field" value="audio/3gpp"><label for="ext-comp-1207" class="x-form-cb-label" id="cq-gen449">Mobile Audio</label></div><div class="x-form-check-wrap" id="cq-gen450"><input type="checkbox" autocomplete="off" id="ext-comp-1208" name="1_group.property.42_value" class=" x-form-checkbox x-form-field" value="audio/mp3"><label for="ext-comp-1208" class="x-form-cb-label" id="cq-gen451">MP3</label></div><div class="x-form-check-wrap" id="cq-gen452"><input type="checkbox" autocomplete="off" id="ext-comp-1209" name="1_group.property.43_value" class=" x-form-checkbox x-form-field" value="audio/mp4"><label for="ext-comp-1209" class="x-form-cb-label" id="cq-gen453">MP4 Audio</label></div><div class="x-form-check-wrap" id="cq-gen454"><input type="checkbox" autocomplete="off" id="ext-comp-1210" name="1_group.property.44_value" class=" x-form-checkbox x-form-field" value="audio/mpeg"><label for="ext-comp-1210" class="x-form-cb-label" id="cq-gen455">MPEG Audio</label></div><div class="x-form-check-wrap" id="cq-gen456"><input type="checkbox" autocomplete="off" id="ext-comp-1211" name="1_group.property.45_value" class=" x-form-checkbox x-form-field" value="audio/ogg"><label for="ext-comp-1211" class="x-form-cb-label" id="cq-gen457">OGG Audio</label></div><div class="x-form-check-wrap" id="cq-gen458"><input type="checkbox" autocomplete="off" id="ext-comp-1212" name="1_group.property.46_value" class=" x-form-checkbox x-form-field" value="audio/vorbis"><label for="ext-comp-1212" class="x-form-cb-label" id="cq-gen459">OGG Vorbis</label></div><div class="x-form-check-wrap" id="cq-gen460"><input type="checkbox" autocomplete="off" id="ext-comp-1213" name="1_group.property.47_value" class=" x-form-checkbox x-form-field" value="audio/vnd.rn-realaudio"><label for="ext-comp-1213" class="x-form-cb-label" id="cq-gen461">Real Audio</label></div><div class="x-form-check-wrap" id="cq-gen462"><input type="checkbox" autocomplete="off" id="ext-comp-1214" name="1_group.property.48_value" class=" x-form-checkbox x-form-field" value="audio/x-wav"><label for="ext-comp-1214" class="x-form-cb-label" id="cq-gen463">WAV</label></div><div class="x-form-check-wrap" id="cq-gen464"><input type="checkbox" autocomplete="off" id="ext-comp-1215" name="1_group.property.49_value" class=" x-form-checkbox x-form-field" value="audio/x-ms-wma"><label for="ext-comp-1215" class="x-form-cb-label" id="cq-gen465">Windows Media</label></div></div></div></div></div></div></div><div id="ext-comp-1218" class=" x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen424"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen425"><div id="ext-comp-1219" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen428"><div class="x-form-check-wrap" id="cq-gen429"><input type="checkbox" autocomplete="off" id="ext-comp-1216" name="ext-comp-1216" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1216" class="x-form-cb-label" id="cq-gen430">Video</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen431"><table id="ext-comp-1217" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen432" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen426"><div id="ext-comp-1221" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen466"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen467"><div class="x-form-check-wrap" id="cq-gen468"><input type="checkbox" autocomplete="off" id="ext-comp-1222" name="1_group.property.50_value" class=" x-form-checkbox x-form-field" value="application/x-dvi"><label for="ext-comp-1222" class="x-form-cb-label" id="cq-gen469">DVI Video</label></div><div class="x-form-check-wrap" id="cq-gen470"><input type="checkbox" autocomplete="off" id="ext-comp-1223" name="1_group.property.51_value" class=" x-form-checkbox x-form-field" value="video/x-flv"><label for="ext-comp-1223" class="x-form-cb-label" id="cq-gen471">Flash Video</label></div><div class="x-form-check-wrap" id="cq-gen472"><input type="checkbox" autocomplete="off" id="ext-comp-1224" name="1_group.property.52_value" class=" x-form-checkbox x-form-field" value="video/mp4"><label for="ext-comp-1224" class="x-form-cb-label" id="cq-gen473">MPEG4 Video</label></div><div class="x-form-check-wrap" id="cq-gen474"><input type="checkbox" autocomplete="off" id="ext-comp-1225" name="1_group.property.53_value" class=" x-form-checkbox x-form-field" value="video/mpeg"><label for="ext-comp-1225" class="x-form-cb-label" id="cq-gen475">MPEG Video</label></div><div class="x-form-check-wrap" id="cq-gen476"><input type="checkbox" autocomplete="off" id="ext-comp-1226" name="1_group.property.54_value" class=" x-form-checkbox x-form-field" value="video/ogg"><label for="ext-comp-1226" class="x-form-cb-label" id="cq-gen477">OGG Theora</label></div><div class="x-form-check-wrap" id="cq-gen478"><input type="checkbox" autocomplete="off" id="ext-comp-1227" name="1_group.property.55_value" class=" x-form-checkbox x-form-field" value="video/quicktime"><label for="ext-comp-1227" class="x-form-cb-label" id="cq-gen479">Quicktime</label></div><div class="x-form-check-wrap" id="cq-gen480"><input type="checkbox" autocomplete="off" id="ext-comp-1228" name="1_group.property.56_value" class=" x-form-checkbox x-form-field" value="video/x-ms-wmv"><label for="ext-comp-1228" class="x-form-cb-label" id="cq-gen481">Windows Media Video</label></div><div class="x-form-check-wrap" id="cq-gen482"><input type="checkbox" autocomplete="off" id="ext-comp-1229" name="1_group.property.57_value" class=" x-form-checkbox x-form-field" value="video/webm"><label for="ext-comp-1229" class="x-form-cb-label" id="cq-gen483">WebM</label></div></div></div></div></div></div></div><div id="ext-comp-1232" class=" x-panel leftpadding level2 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen433"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen434"><div id="ext-comp-1233" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen437"><div class="x-form-check-wrap" id="cq-gen438"><input type="checkbox" autocomplete="off" id="ext-comp-1230" name="ext-comp-1230" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1230" class="x-form-cb-label" id="cq-gen439">Other</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen440"><table id="ext-comp-1231" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen441" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen435"><div id="ext-comp-1235" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen484"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen485"><div class="x-form-check-wrap" id="cq-gen486"><input type="checkbox" autocomplete="off" id="ext-comp-1236" name="1_group.property.58_value" class=" x-form-checkbox x-form-field" value="application/x-shockwave-flash"><label for="ext-comp-1236" class="x-form-cb-label" id="cq-gen487">Flash Animations</label></div><div class="x-form-check-wrap" id="cq-gen488"><input type="checkbox" autocomplete="off" id="ext-comp-1237" name="1_group.property.59_value" class=" x-form-checkbox x-form-field" value="application/vnd.adobe.air-application-installer-package+zip"><label for="ext-comp-1237" class="x-form-cb-label" id="cq-gen489">Adobe AIR</label></div></div></div></div></div></div></div></div></div></div></div></div></div><div id="ext-comp-1240" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen194"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen195"><div id="ext-comp-1241" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen198"><div class="x-form-check-wrap" id="cq-gen199"><input type="checkbox" autocomplete="off" id="ext-comp-1238" name="ext-comp-1238" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1238" class="x-form-cb-label" id="cq-gen200">Archives</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen201"><table id="ext-comp-1239" cellspacing="0" class="x-btn expand x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen202" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen196"><div id="ext-comp-1243" class=" x-panel subpanel x-panel-noborder x-hide-offsets"><div class="x-panel-bwrap" id="cq-gen490"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen491"><div class="x-form-check-wrap" id="cq-gen492"><input type="checkbox" autocomplete="off" id="ext-comp-1244" name="1_group.property.60_value" class=" x-form-checkbox x-form-field" value="application/x-tar-gz"><label for="ext-comp-1244" class="x-form-cb-label" id="cq-gen493">Compressed TAR</label></div><div class="x-form-check-wrap" id="cq-gen494"><input type="checkbox" autocomplete="off" id="ext-comp-1245" name="1_group.property.61_value" class=" x-form-checkbox x-form-field" value="application/java-archive"><label for="ext-comp-1245" class="x-form-cb-label" id="cq-gen495">JAR Archives</label></div><div class="x-form-check-wrap" id="cq-gen496"><input type="checkbox" autocomplete="off" id="ext-comp-1246" name="1_group.property.62_value" class=" x-form-checkbox x-form-field" value="application/x-rar-compressed"><label for="ext-comp-1246" class="x-form-cb-label" id="cq-gen497">RAR Archives</label></div><div class="x-form-check-wrap" id="cq-gen498"><input type="checkbox" autocomplete="off" id="ext-comp-1247" name="1_group.property.63_value" class=" x-form-checkbox x-form-field" value="application/x-tar"><label for="ext-comp-1247" class="x-form-cb-label" id="cq-gen499">TAR Archives</label></div><div class="x-form-check-wrap" id="cq-gen500"><input type="checkbox" autocomplete="off" id="ext-comp-1248" name="1_group.property.64_value" class=" x-form-checkbox x-form-field" value="application/zip"><label for="ext-comp-1248" class="x-form-cb-label" id="cq-gen501">ZIP Archive</label></div></div></div></div></div></div></div><div id="ext-comp-1251" class=" x-panel leftpadding level1 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen203"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen204"><div id="ext-comp-1252" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen207"><div class="x-form-check-wrap" id="cq-gen208"><input type="checkbox" autocomplete="off" id="ext-comp-1249" name="ext-comp-1249" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1249" class="x-form-cb-label" id="cq-gen209">Other</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen210"><table id="ext-comp-1250" cellspacing="0" class="x-btn expand x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen211" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen205"><div id="ext-comp-1254" class=" x-panel subpanel x-panel-noborder x-hide-offsets"><div class="x-panel-bwrap" id="cq-gen502"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen503"><div class="x-form-check-wrap" id="cq-gen504"><input type="checkbox" autocomplete="off" id="ext-comp-1255" name="1_group.property.65_value" class=" x-form-checkbox x-form-field" value="application/octet-stream"><label for="ext-comp-1255" class="x-form-cb-label" id="cq-gen505">Binary Data</label></div></div></div></div></div></div></div></div></div></div></div></div></div><input type="hidden" size="20" autocomplete="off" id="ext-comp-1256" name="1_group.property" class=" x-form-hidden x-form-field" value="jcr:content/metadata/dc:format"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1257" name="1_group.p.or" class=" x-form-hidden x-form-field" value="true"></div></div></div></div>
<script type="text/javascript">

    CQ.Ext.onLoad(function() {

        var CQ_search_optionsPredicate = {
            "counter": 0,
            "controls": {},
            "title": "",
            "predicateName": "",
            "propertyPath": "jcr:content\/metadata\/dc:format",
            "groupId": CQ.search.Util.getQueryBuilder().createGroupId(),
            "collapse": "level1",
            "searchTimeoutId": 0,
            "searchTimeoutTime": 800,
            "triggerSearch": true,
            "paths": ["\/content\/dam\/sunpower\/asset-share\/jcr:content\/querybuilder\/left\/options.values.0.json"],


            init: function() {
                this.panel = new CQ.Ext.Panel({
                    "renderTo": "cq-predicate-1445545965620",
                    "border": false
                });

                this.options = this.getOptions();

                if (this.title) {
                    // add additional top level
                    this.options = {
                        "jcr:title": this.title,
                        subs: this.options
                    };
                }

                this.traverseOption(this.options, this.panel, 0, "");

                // add hidden after traverse options to keep panel items[0] (for collapse)
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + "." + this.predicateName,
                    "value": this.propertyPath
                }));
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + ".p.or",
                    "value": "true"
                }));

                switch (this.collapse) {
                    case "none":
                        break;
                    case "level0":
                        this.toggle(this.panel.items.get(0));
                        break;
                    default:
                        // hide sub panels
                        var p0 = this.panel.items.get(0);
                        if (p0.subPanel) {
                            var c = p0.subPanel.items.getCount();
                            for (var i = 0; i < c; i++) {
                                this.toggle(p0.subPanel.items.get(i));
                            }
                        }
                }

                this.panel.doLayout();
            },

            /**
             * Requests the options
             * @private
             */
            getOptions: function() {
                var options = {};

                for (var i = 0; i < this.paths.length; i++) {
                    var tagId = "";
                    var path = this.paths[i];

                    if (path.lastIndexOf(".json") != path.length - ".json".length) {
                        // do not touch paths that ends with ".json" already
                        // otherwise add ".infinity.json"

                        // workaround to allow handling of tags with .infinity.json (which does not provide the tagId):
                        // the tagId is build from the path
                        if (path.indexOf("/etc/tags") == 0) {
                            //todo: switch to tagid predicate (if not overwritten in component config)
                            //if (!this.predicateName) predicateName = "tagid";

                            tagId = path.replace("/etc/tags", "");
                            if (tagId === "") {
                                // optionsPath is the tag root path, e.g. "/etc/tags" => ":"
                                // colon is used later on to identify root path
                                tagId = ":";
                            }
                            else {
                                tagId = tagId.replace("/", "");
                                if (tagId.indexOf("/") != -1) {
                                    // optionsPath is a tag's path, e.g. "/etc/tags/stockphotography/animals" => "stockphotography:animals"
                                    tagId = tagId.replace("/", ":");
                                }
                                // else optionsPath is a namespace's path, e.g. "/etc/tags/stockphotography" => "stockphotography"
                            }
                        }

                        path += ".infinity.json";
                    }

                    var resp = CQ.HTTP.eval(path);
                    if (!resp) continue;
                    if (resp instanceof Array) {
                        for (var j=0;j<resp.length; j++) {
                            options["o" + i + "_" + j] = resp[j];
                            options["o" + i + "_" + j].tagId = tagId;
                        }
                    } else {
                        options["o" + i] = resp;
                        options["o" + i].tagId = tagId;
                    }

                }
                if (!this.predicateName) this.predicateName = "property";

                return options;
            },

            /**
             * Checks if an option has sub options.
             * @private
             */
            isLeaf: function(option) {
                for (property in option) {
                    if (CQ.Ext.type(option[property]) == "object") {
                        return false;
                    }
                }
                return true;
            },

            /**
             * Unchecks the checkboxes of the parents (titles) of a widget.
             * @param widget The widget
             * @private
             */
            uncheckParents: function(widget) {
                while (widget) {
                    widget = widget.findParentBy(function(panel) {
                        if (panel.titleCheckbox) return true;
                    });
                    if (widget) widget.titleCheckbox.setValue(false, true);
                }
                return true;
            },

            /**
             * Expands resp. collapses the specified panel.
             * @param panel
             */
            toggle: function(panel) {
                if (!panel.subPanel) return;
                if (panel.subPanel.hidden) {
                    panel.toggle.removeClass("expand");
                    panel.toggle.addClass("collapse");
                    panel.subPanel.show();
                    // because of hideMode="offsets" IE requires that every
                    // item is shown to properly display the sub panels
                    for (var i = 0; i < panel.subPanel.items.getCount(); i++) {
                        panel.subPanel.items.get(i).show();
                    }
                }
                else {
                    panel.toggle.removeClass("collapse");
                    panel.toggle.addClass("expand");
                    panel.subPanel.hide();
                }
            },

            /**
             * Submits the Query Builder after a short timeout. Thanks to the timeout
             * it is possible to check/uncheck multiple checkboxes without
             * triggering a search every time.
             * @private
             */
            search: function() {
                if (this.triggerSearch) {
                    window.clearTimeout(this.searchTimeoutId);
                    this.searchTimeoutId = window.setTimeout(function() {
                        var qb = CQ.search.Util.getQueryBuilder();
                        if (qb) CQ.search.Util.getQueryBuilder().submit();
                    }, this.searchTimeoutTime);
                }
            },

            /**
             * Renders the specified option and traverses its sub options.
             * @param option The option
             * @param parentPanel The panel where this option is added to
             * @param level The level - required for CSS classes
             * @param tagId The prefix for tag ids (optional)
             * @private
             */
            traverseOption: function(option, parentPanel, level, tagId) {

                // the option is tag => pass tag id to the sub options
                if (option.tagId) tagId = option.tagId;

                if (!this.isLeaf(option)) {
                    // title option with sub options

                    var panel;

                    if (option["jcr:title"]) {
                        // option has a title: draw title with a checkbox to check/uncheck the entire group

                        var name = "";
                        var value = "";
                        if (tagId && (tagId != ":" || tagId.indexOf(":") == -1)) {
                            // "tag titles" are tags itself and need to be submitted
                            this.counter++;
                            name = this.groupId + "." +  this.predicateName + "." + this.counter + "_value";
                            value = tagId;
                        }

                        var checkbox = new CQ.Ext.form.Checkbox({
                            "boxLabel": option["jcr:title"],
                            "inputValue": value,
                            "name": name
                        });

                        // toggle button to toggle the subPanel
                        var toggle = new CQ.Ext.Button({
                            "cls": "collapse"
                        });

                        panel = new CQ.Ext.Panel({
                            "cls": "leftpadding level" + level,
                            "border": false,
                            "toolTarget": "toolbar",
                            "tbar": [
                                checkbox,
                                "->",
                                toggle
                             ]
                        });

                        checkbox.on("check", function(cbox, checked) {
                            if (!checked) CQ_search_optionsPredicate.uncheckParents(cbox);
                            CQ_search_optionsPredicate.search();
                            panel.cascade(function(o) {
                                if (o instanceof CQ.Ext.form.Checkbox) {
                                    o.setValue(checked, true);
                                }
                                else if (o.titleCheckbox) {
                                    o.titleCheckbox.setValue(checked, true);
                                }
                                return true;
                            });
                        });

                        var op = this;
                        toggle.on("click", function() {
                            op.toggle(panel);
                        });


                        panel.toggle = toggle;
                        panel.titleCheckbox = checkbox;

                        // add panel for sub items
                        panel.subPanel = new CQ.Ext.Panel({
                            "border":false,
                            "cls": "subpanel",
                            "hideMode": "offsets"
                        });
                        panel.add(panel.subPanel);

                        parentPanel.add(panel);

                        level++;
                    }

                    for (var sub in option) {
                        if (CQ.Ext.type(option[sub]) == "object") {
                            var nextTagId = "";
                            if (tagId) {
                                if (tagId == ":") {
                                    // tag root: sub are namespaces
                                    nextTagId = sub + ":";
                                }
                                else if (tagId.indexOf(":") == -1) {
                                    // tagId is namespace
                                    nextTagId = tagId + ":" + sub;
                                }
                                else {
                                    // tagId is tag
                                    nextTagId = tagId + "/" + sub;
                                }
                            }
                            this.traverseOption(option[sub], panel ? panel.subPanel : parentPanel, level, nextTagId);
                        }
                    }
                }
                else {
                    // leaf option

                    this.counter++;
                    var value = option["value"] ? option["value"] : "";
                    if (!value && tagId) value = tagId;
                    var title = option["jcr:title"] ? option["jcr:title"] : value;

                    var checkbox = new CQ.Ext.form.Checkbox({
                        "boxLabel": title,
                        "name": this.groupId + "." +  this.predicateName + "." + this.counter + "_value",
                        "inputValue": value
                    });

                    // register the checkbox
                    //todo: not save: same value in different fieldsets possible
                    this.controls[option["value"]] = checkbox;

                    checkbox.on("check", function(cbox, checked) {
                        if (!checked) {
                            // uncheck leaf checkbox: uncheck according fieldset checkboxes
                            CQ_search_optionsPredicate.uncheckParents(cbox);
                        }

                        CQ_search_optionsPredicate.search();
                    });

//                    checkbox.on("hide", function(e) {
//                        e.findParentByType("fieldset").bubble(function(o){
//                            var checkboxes = o.findByType("checkbox");
//                            var onevisible = false;
//                            for (var i=0;i<checkboxes.length;i++) {
//                                if (checkboxes[i].isVisible()||checkboxes[i].getValue()) {
//                                    onevisible = true;
//                                }
//                                if (onevisible) {
//                                    o.show();
//                                } else {
//                                  o.hide();
//                                }
//                            }
//                            return true;
//                            });
//                        });

                    parentPanel.add(checkbox);
                }
            },

            update: function(result) {
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                    control.hits = 0;
//                }
//
//                for (var fac in result.facets) {
//                    var facet = result.facets[fac];
//                    for (var i=0;i<facet.length;i++) {
//                        if (this.controls[facet[i].value]!=undefined) {
//                            var control =  this.controls[facet[i].value];
//                            control.hits = facet[i].count;
//
//                            control.labelEl.dom.innerHTML = control.boxLabel + " (" + facet[i].count + ")";
//
//                            //this.controls[facet[i].value].labelEl.dom.innerHTML = "foo";
//                            // = this.controls[facet[i].value].boxLabel + "
////                                console.log("found: " + this.controls[facet[i].value] + " " + facet[i].count);
//                        } else {
////                                console.log("uncategorized: " + facet[i].value);
//                        }
//                    }
//                    break;//all groups are the same
//                }

                //todo: problem on 09-09-16: hides entire control on initial search
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                        if (control.hits==0&&control.getValue!=true) {
//                            control.hide();
//                        } else {
//                            control.show();
//                        }
//                    }
              }
        };

        CQ_search_optionsPredicate.init();
        CQ.search.Util.getQueryBuilder().on("loadResult", CQ_search_optionsPredicate.update, CQ_search_optionsPredicate);

});
</script>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options&quot;,&quot;dialog&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fcq%2Fsearch%2Fcomponents%2Fpredicates%2Foptions%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Fquerybuilder%2Fleft%2Foptions&quot;,&quot;dialogClassic&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;type&quot;:&quot;cq/search/components/predicates/options&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys/options|parbase&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"cq/search/components/predicates/options","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options","selectors":null,"servlet":"Script /libs/cq/search/components/predicates/options/options.jsp","totalTime":1,"selfTime":1}-->
<div class="parbase options section">
<div id="cq-predicate-1445545965621" class="optionspredicatebox"><div id="ext-comp-1258" class=" x-panel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen506"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen507"><div id="ext-comp-1261" class=" x-panel leftpadding level0 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen511"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen512"><div id="ext-comp-1262" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen515"><div class="x-form-check-wrap" id="cq-gen516"><input type="checkbox" autocomplete="off" id="ext-comp-1259" name="ext-comp-1259" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1259" class="x-form-cb-label" id="cq-gen517">Orientation</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen518"><table id="ext-comp-1260" cellspacing="0" class="x-btn collapse x-btn-noicon"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen519" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen513"><div id="ext-comp-1264" class=" x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen520"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen521"><div class="x-form-check-wrap" id="cq-gen522"><input type="checkbox" autocomplete="off" id="ext-comp-1265" name="2_group.property.1_value" class=" x-form-checkbox x-form-field" value="properties:orientation/landscape"><label for="ext-comp-1265" class="x-form-cb-label" id="cq-gen523">Horizontal</label></div><div class="x-form-check-wrap" id="cq-gen524"><input type="checkbox" autocomplete="off" id="ext-comp-1266" name="2_group.property.2_value" class=" x-form-checkbox x-form-field" value="properties:orientation/portrait"><label for="ext-comp-1266" class="x-form-cb-label" id="cq-gen525">Vertical</label></div><div class="x-form-check-wrap" id="cq-gen526"><input type="checkbox" autocomplete="off" id="ext-comp-1267" name="2_group.property.3_value" class=" x-form-checkbox x-form-field" value="properties:orientation/square"><label for="ext-comp-1267" class="x-form-cb-label" id="cq-gen527">Square</label></div></div></div></div></div></div></div><input type="hidden" size="20" autocomplete="off" id="ext-comp-1268" name="2_group.property" class=" x-form-hidden x-form-field" value="jcr:content/metadata/cq:tags"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1269" name="2_group.p.or" class=" x-form-hidden x-form-field" value="true"></div></div></div></div>
<script type="text/javascript">

    CQ.Ext.onLoad(function() {

        var CQ_search_optionsPredicate = {
            "counter": 0,
            "controls": {},
            "title": "",
            "predicateName": "",
            "propertyPath": "jcr:content\/metadata\/cq:tags",
            "groupId": CQ.search.Util.getQueryBuilder().createGroupId(),
            "collapse": "level1",
            "searchTimeoutId": 0,
            "searchTimeoutTime": 800,
            "triggerSearch": true,
            "paths": ["\/content\/dam\/sunpower\/asset-share\/jcr:content\/querybuilder\/left\/options_1.values.0.json"],


            init: function() {
                this.panel = new CQ.Ext.Panel({
                    "renderTo": "cq-predicate-1445545965621",
                    "border": false
                });

                this.options = this.getOptions();

                if (this.title) {
                    // add additional top level
                    this.options = {
                        "jcr:title": this.title,
                        subs: this.options
                    };
                }

                this.traverseOption(this.options, this.panel, 0, "");

                // add hidden after traverse options to keep panel items[0] (for collapse)
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + "." + this.predicateName,
                    "value": this.propertyPath
                }));
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + ".p.or",
                    "value": "true"
                }));

                switch (this.collapse) {
                    case "none":
                        break;
                    case "level0":
                        this.toggle(this.panel.items.get(0));
                        break;
                    default:
                        // hide sub panels
                        var p0 = this.panel.items.get(0);
                        if (p0.subPanel) {
                            var c = p0.subPanel.items.getCount();
                            for (var i = 0; i < c; i++) {
                                this.toggle(p0.subPanel.items.get(i));
                            }
                        }
                }

                this.panel.doLayout();
            },

            /**
             * Requests the options
             * @private
             */
            getOptions: function() {
                var options = {};

                for (var i = 0; i < this.paths.length; i++) {
                    var tagId = "";
                    var path = this.paths[i];

                    if (path.lastIndexOf(".json") != path.length - ".json".length) {
                        // do not touch paths that ends with ".json" already
                        // otherwise add ".infinity.json"

                        // workaround to allow handling of tags with .infinity.json (which does not provide the tagId):
                        // the tagId is build from the path
                        if (path.indexOf("/etc/tags") == 0) {
                            //todo: switch to tagid predicate (if not overwritten in component config)
                            //if (!this.predicateName) predicateName = "tagid";

                            tagId = path.replace("/etc/tags", "");
                            if (tagId === "") {
                                // optionsPath is the tag root path, e.g. "/etc/tags" => ":"
                                // colon is used later on to identify root path
                                tagId = ":";
                            }
                            else {
                                tagId = tagId.replace("/", "");
                                if (tagId.indexOf("/") != -1) {
                                    // optionsPath is a tag's path, e.g. "/etc/tags/stockphotography/animals" => "stockphotography:animals"
                                    tagId = tagId.replace("/", ":");
                                }
                                // else optionsPath is a namespace's path, e.g. "/etc/tags/stockphotography" => "stockphotography"
                            }
                        }

                        path += ".infinity.json";
                    }

                    var resp = CQ.HTTP.eval(path);
                    if (!resp) continue;
                    if (resp instanceof Array) {
                        for (var j=0;j<resp.length; j++) {
                            options["o" + i + "_" + j] = resp[j];
                            options["o" + i + "_" + j].tagId = tagId;
                        }
                    } else {
                        options["o" + i] = resp;
                        options["o" + i].tagId = tagId;
                    }

                }
                if (!this.predicateName) this.predicateName = "property";

                return options;
            },

            /**
             * Checks if an option has sub options.
             * @private
             */
            isLeaf: function(option) {
                for (property in option) {
                    if (CQ.Ext.type(option[property]) == "object") {
                        return false;
                    }
                }
                return true;
            },

            /**
             * Unchecks the checkboxes of the parents (titles) of a widget.
             * @param widget The widget
             * @private
             */
            uncheckParents: function(widget) {
                while (widget) {
                    widget = widget.findParentBy(function(panel) {
                        if (panel.titleCheckbox) return true;
                    });
                    if (widget) widget.titleCheckbox.setValue(false, true);
                }
                return true;
            },

            /**
             * Expands resp. collapses the specified panel.
             * @param panel
             */
            toggle: function(panel) {
                if (!panel.subPanel) return;
                if (panel.subPanel.hidden) {
                    panel.toggle.removeClass("expand");
                    panel.toggle.addClass("collapse");
                    panel.subPanel.show();
                    // because of hideMode="offsets" IE requires that every
                    // item is shown to properly display the sub panels
                    for (var i = 0; i < panel.subPanel.items.getCount(); i++) {
                        panel.subPanel.items.get(i).show();
                    }
                }
                else {
                    panel.toggle.removeClass("collapse");
                    panel.toggle.addClass("expand");
                    panel.subPanel.hide();
                }
            },

            /**
             * Submits the Query Builder after a short timeout. Thanks to the timeout
             * it is possible to check/uncheck multiple checkboxes without
             * triggering a search every time.
             * @private
             */
            search: function() {
                if (this.triggerSearch) {
                    window.clearTimeout(this.searchTimeoutId);
                    this.searchTimeoutId = window.setTimeout(function() {
                        var qb = CQ.search.Util.getQueryBuilder();
                        if (qb) CQ.search.Util.getQueryBuilder().submit();
                    }, this.searchTimeoutTime);
                }
            },

            /**
             * Renders the specified option and traverses its sub options.
             * @param option The option
             * @param parentPanel The panel where this option is added to
             * @param level The level - required for CSS classes
             * @param tagId The prefix for tag ids (optional)
             * @private
             */
            traverseOption: function(option, parentPanel, level, tagId) {

                // the option is tag => pass tag id to the sub options
                if (option.tagId) tagId = option.tagId;

                if (!this.isLeaf(option)) {
                    // title option with sub options

                    var panel;

                    if (option["jcr:title"]) {
                        // option has a title: draw title with a checkbox to check/uncheck the entire group

                        var name = "";
                        var value = "";
                        if (tagId && (tagId != ":" || tagId.indexOf(":") == -1)) {
                            // "tag titles" are tags itself and need to be submitted
                            this.counter++;
                            name = this.groupId + "." +  this.predicateName + "." + this.counter + "_value";
                            value = tagId;
                        }

                        var checkbox = new CQ.Ext.form.Checkbox({
                            "boxLabel": option["jcr:title"],
                            "inputValue": value,
                            "name": name
                        });

                        // toggle button to toggle the subPanel
                        var toggle = new CQ.Ext.Button({
                            "cls": "collapse"
                        });

                        panel = new CQ.Ext.Panel({
                            "cls": "leftpadding level" + level,
                            "border": false,
                            "toolTarget": "toolbar",
                            "tbar": [
                                checkbox,
                                "->",
                                toggle
                             ]
                        });

                        checkbox.on("check", function(cbox, checked) {
                            if (!checked) CQ_search_optionsPredicate.uncheckParents(cbox);
                            CQ_search_optionsPredicate.search();
                            panel.cascade(function(o) {
                                if (o instanceof CQ.Ext.form.Checkbox) {
                                    o.setValue(checked, true);
                                }
                                else if (o.titleCheckbox) {
                                    o.titleCheckbox.setValue(checked, true);
                                }
                                return true;
                            });
                        });

                        var op = this;
                        toggle.on("click", function() {
                            op.toggle(panel);
                        });


                        panel.toggle = toggle;
                        panel.titleCheckbox = checkbox;

                        // add panel for sub items
                        panel.subPanel = new CQ.Ext.Panel({
                            "border":false,
                            "cls": "subpanel",
                            "hideMode": "offsets"
                        });
                        panel.add(panel.subPanel);

                        parentPanel.add(panel);

                        level++;
                    }

                    for (var sub in option) {
                        if (CQ.Ext.type(option[sub]) == "object") {
                            var nextTagId = "";
                            if (tagId) {
                                if (tagId == ":") {
                                    // tag root: sub are namespaces
                                    nextTagId = sub + ":";
                                }
                                else if (tagId.indexOf(":") == -1) {
                                    // tagId is namespace
                                    nextTagId = tagId + ":" + sub;
                                }
                                else {
                                    // tagId is tag
                                    nextTagId = tagId + "/" + sub;
                                }
                            }
                            this.traverseOption(option[sub], panel ? panel.subPanel : parentPanel, level, nextTagId);
                        }
                    }
                }
                else {
                    // leaf option

                    this.counter++;
                    var value = option["value"] ? option["value"] : "";
                    if (!value && tagId) value = tagId;
                    var title = option["jcr:title"] ? option["jcr:title"] : value;

                    var checkbox = new CQ.Ext.form.Checkbox({
                        "boxLabel": title,
                        "name": this.groupId + "." +  this.predicateName + "." + this.counter + "_value",
                        "inputValue": value
                    });

                    // register the checkbox
                    //todo: not save: same value in different fieldsets possible
                    this.controls[option["value"]] = checkbox;

                    checkbox.on("check", function(cbox, checked) {
                        if (!checked) {
                            // uncheck leaf checkbox: uncheck according fieldset checkboxes
                            CQ_search_optionsPredicate.uncheckParents(cbox);
                        }

                        CQ_search_optionsPredicate.search();
                    });

//                    checkbox.on("hide", function(e) {
//                        e.findParentByType("fieldset").bubble(function(o){
//                            var checkboxes = o.findByType("checkbox");
//                            var onevisible = false;
//                            for (var i=0;i<checkboxes.length;i++) {
//                                if (checkboxes[i].isVisible()||checkboxes[i].getValue()) {
//                                    onevisible = true;
//                                }
//                                if (onevisible) {
//                                    o.show();
//                                } else {
//                                  o.hide();
//                                }
//                            }
//                            return true;
//                            });
//                        });

                    parentPanel.add(checkbox);
                }
            },

            update: function(result) {
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                    control.hits = 0;
//                }
//
//                for (var fac in result.facets) {
//                    var facet = result.facets[fac];
//                    for (var i=0;i<facet.length;i++) {
//                        if (this.controls[facet[i].value]!=undefined) {
//                            var control =  this.controls[facet[i].value];
//                            control.hits = facet[i].count;
//
//                            control.labelEl.dom.innerHTML = control.boxLabel + " (" + facet[i].count + ")";
//
//                            //this.controls[facet[i].value].labelEl.dom.innerHTML = "foo";
//                            // = this.controls[facet[i].value].boxLabel + "
////                                console.log("found: " + this.controls[facet[i].value] + " " + facet[i].count);
//                        } else {
////                                console.log("uncategorized: " + facet[i].value);
//                        }
//                    }
//                    break;//all groups are the same
//                }

                //todo: problem on 09-09-16: hides entire control on initial search
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                        if (control.hits==0&&control.getValue!=true) {
//                            control.hide();
//                        } else {
//                            control.show();
//                        }
//                    }
              }
        };

        CQ_search_optionsPredicate.init();
        CQ.search.Util.getQueryBuilder().on("loadResult", CQ_search_optionsPredicate.update, CQ_search_optionsPredicate);

});
</script>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_1" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_1&quot;,&quot;dialog&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fcq%2Fsearch%2Fcomponents%2Fpredicates%2Foptions%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Fquerybuilder%2Fleft%2Foptions_1&quot;,&quot;dialogClassic&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;type&quot;:&quot;cq/search/components/predicates/options&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys/options|parbase&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"cq/search/components/predicates/options","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_1","selectors":null,"servlet":"Script /libs/cq/search/components/predicates/options/options.jsp","totalTime":1,"selfTime":1}-->
<div class="parbase options section">
<div id="cq-predicate-1445545965622" class="optionspredicatebox"><div id="ext-comp-1270" class=" x-panel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen528"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen529"><div id="ext-comp-1273" class=" x-panel leftpadding level0 x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen533"><div class="x-panel-tbar x-panel-tbar-noheader x-panel-tbar-noborder" id="cq-gen534"><div id="ext-comp-1274" class="x-toolbar x-small-editor x-toolbar-layout-ct"><table cellspacing="0" class="x-toolbar-ct"><tbody><tr><td class="x-toolbar-left" align="left"><table cellspacing="0"><tbody><tr class="x-toolbar-left-row"><td class="x-toolbar-cell" id="cq-gen537"><div class="x-form-check-wrap" id="cq-gen538"><input type="checkbox" autocomplete="off" id="ext-comp-1271" name="ext-comp-1271" class=" x-form-checkbox x-form-field" value=""><label for="ext-comp-1271" class="x-form-cb-label" id="cq-gen539">Style</label></div></td></tr></tbody></table></td><td class="x-toolbar-right" align="right"><table cellspacing="0" class="x-toolbar-right-ct"><tbody><tr><td><table cellspacing="0"><tbody><tr class="x-toolbar-right-row"><td class="x-toolbar-cell" id="cq-gen540"><table id="ext-comp-1272" cellspacing="0" class="x-btn x-btn-noicon collapse"><tbody class="x-btn-small x-btn-icon-small-left"><tr><td class="x-btn-tl"><i>&nbsp;</i></td><td class="x-btn-tc"></td><td class="x-btn-tr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-ml"><i>&nbsp;</i></td><td class="x-btn-mc"><em class="" unselectable="on"><button type="button" id="cq-gen541" class=" x-btn-text">&nbsp;</button></em></td><td class="x-btn-mr"><i>&nbsp;</i></td></tr><tr><td class="x-btn-bl"><i>&nbsp;</i></td><td class="x-btn-bc"></td><td class="x-btn-br"><i>&nbsp;</i></td></tr></tbody></table></td></tr></tbody></table></td><td><table cellspacing="0"><tbody><tr class="x-toolbar-extras-row"></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></div></div><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen535"><div id="ext-comp-1276" class="x-panel subpanel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen542"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen543"><div class="x-form-check-wrap" id="cq-gen544"><input type="checkbox" autocomplete="off" id="ext-comp-1277" name="3_group.property.1_value" class=" x-form-checkbox x-form-field" value="properties:style/color"><label for="ext-comp-1277" class="x-form-cb-label" id="cq-gen545">Color</label></div><div class="x-form-check-wrap" id="cq-gen546"><input type="checkbox" autocomplete="off" id="ext-comp-1278" name="3_group.property.2_value" class=" x-form-checkbox x-form-field" value="properties:style/monochrome/grayscale"><label for="ext-comp-1278" class="x-form-cb-label" id="cq-gen547">Black &amp; white</label></div></div></div></div></div></div></div><input type="hidden" size="20" autocomplete="off" id="ext-comp-1279" name="3_group.property" class=" x-form-hidden x-form-field" value="jcr:content/metadata/cq:tags"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1280" name="3_group.p.or" class=" x-form-hidden x-form-field" value="true"></div></div></div></div>
<script type="text/javascript">

    CQ.Ext.onLoad(function() {

        var CQ_search_optionsPredicate = {
            "counter": 0,
            "controls": {},
            "title": "",
            "predicateName": "",
            "propertyPath": "jcr:content\/metadata\/cq:tags",
            "groupId": CQ.search.Util.getQueryBuilder().createGroupId(),
            "collapse": "level1",
            "searchTimeoutId": 0,
            "searchTimeoutTime": 800,
            "triggerSearch": true,
            "paths": ["\/content\/dam\/sunpower\/asset-share\/jcr:content\/querybuilder\/left\/options_2.values.0.json"],


            init: function() {
                this.panel = new CQ.Ext.Panel({
                    "renderTo": "cq-predicate-1445545965622",
                    "border": false
                });

                this.options = this.getOptions();

                if (this.title) {
                    // add additional top level
                    this.options = {
                        "jcr:title": this.title,
                        subs: this.options
                    };
                }

                this.traverseOption(this.options, this.panel, 0, "");

                // add hidden after traverse options to keep panel items[0] (for collapse)
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + "." + this.predicateName,
                    "value": this.propertyPath
                }));
                this.panel.add(new CQ.Ext.form.Hidden({
                    "name": this.groupId + ".p.or",
                    "value": "true"
                }));

                switch (this.collapse) {
                    case "none":
                        break;
                    case "level0":
                        this.toggle(this.panel.items.get(0));
                        break;
                    default:
                        // hide sub panels
                        var p0 = this.panel.items.get(0);
                        if (p0.subPanel) {
                            var c = p0.subPanel.items.getCount();
                            for (var i = 0; i < c; i++) {
                                this.toggle(p0.subPanel.items.get(i));
                            }
                        }
                }

                this.panel.doLayout();
            },

            /**
             * Requests the options
             * @private
             */
            getOptions: function() {
                var options = {};

                for (var i = 0; i < this.paths.length; i++) {
                    var tagId = "";
                    var path = this.paths[i];

                    if (path.lastIndexOf(".json") != path.length - ".json".length) {
                        // do not touch paths that ends with ".json" already
                        // otherwise add ".infinity.json"

                        // workaround to allow handling of tags with .infinity.json (which does not provide the tagId):
                        // the tagId is build from the path
                        if (path.indexOf("/etc/tags") == 0) {
                            //todo: switch to tagid predicate (if not overwritten in component config)
                            //if (!this.predicateName) predicateName = "tagid";

                            tagId = path.replace("/etc/tags", "");
                            if (tagId === "") {
                                // optionsPath is the tag root path, e.g. "/etc/tags" => ":"
                                // colon is used later on to identify root path
                                tagId = ":";
                            }
                            else {
                                tagId = tagId.replace("/", "");
                                if (tagId.indexOf("/") != -1) {
                                    // optionsPath is a tag's path, e.g. "/etc/tags/stockphotography/animals" => "stockphotography:animals"
                                    tagId = tagId.replace("/", ":");
                                }
                                // else optionsPath is a namespace's path, e.g. "/etc/tags/stockphotography" => "stockphotography"
                            }
                        }

                        path += ".infinity.json";
                    }

                    var resp = CQ.HTTP.eval(path);
                    if (!resp) continue;
                    if (resp instanceof Array) {
                        for (var j=0;j<resp.length; j++) {
                            options["o" + i + "_" + j] = resp[j];
                            options["o" + i + "_" + j].tagId = tagId;
                        }
                    } else {
                        options["o" + i] = resp;
                        options["o" + i].tagId = tagId;
                    }

                }
                if (!this.predicateName) this.predicateName = "property";

                return options;
            },

            /**
             * Checks if an option has sub options.
             * @private
             */
            isLeaf: function(option) {
                for (property in option) {
                    if (CQ.Ext.type(option[property]) == "object") {
                        return false;
                    }
                }
                return true;
            },

            /**
             * Unchecks the checkboxes of the parents (titles) of a widget.
             * @param widget The widget
             * @private
             */
            uncheckParents: function(widget) {
                while (widget) {
                    widget = widget.findParentBy(function(panel) {
                        if (panel.titleCheckbox) return true;
                    });
                    if (widget) widget.titleCheckbox.setValue(false, true);
                }
                return true;
            },

            /**
             * Expands resp. collapses the specified panel.
             * @param panel
             */
            toggle: function(panel) {
                if (!panel.subPanel) return;
                if (panel.subPanel.hidden) {
                    panel.toggle.removeClass("expand");
                    panel.toggle.addClass("collapse");
                    panel.subPanel.show();
                    // because of hideMode="offsets" IE requires that every
                    // item is shown to properly display the sub panels
                    for (var i = 0; i < panel.subPanel.items.getCount(); i++) {
                        panel.subPanel.items.get(i).show();
                    }
                }
                else {
                    panel.toggle.removeClass("collapse");
                    panel.toggle.addClass("expand");
                    panel.subPanel.hide();
                }
            },

            /**
             * Submits the Query Builder after a short timeout. Thanks to the timeout
             * it is possible to check/uncheck multiple checkboxes without
             * triggering a search every time.
             * @private
             */
            search: function() {
                if (this.triggerSearch) {
                    window.clearTimeout(this.searchTimeoutId);
                    this.searchTimeoutId = window.setTimeout(function() {
                        var qb = CQ.search.Util.getQueryBuilder();
                        if (qb) CQ.search.Util.getQueryBuilder().submit();
                    }, this.searchTimeoutTime);
                }
            },

            /**
             * Renders the specified option and traverses its sub options.
             * @param option The option
             * @param parentPanel The panel where this option is added to
             * @param level The level - required for CSS classes
             * @param tagId The prefix for tag ids (optional)
             * @private
             */
            traverseOption: function(option, parentPanel, level, tagId) {

                // the option is tag => pass tag id to the sub options
                if (option.tagId) tagId = option.tagId;

                if (!this.isLeaf(option)) {
                    // title option with sub options

                    var panel;

                    if (option["jcr:title"]) {
                        // option has a title: draw title with a checkbox to check/uncheck the entire group

                        var name = "";
                        var value = "";
                        if (tagId && (tagId != ":" || tagId.indexOf(":") == -1)) {
                            // "tag titles" are tags itself and need to be submitted
                            this.counter++;
                            name = this.groupId + "." +  this.predicateName + "." + this.counter + "_value";
                            value = tagId;
                        }

                        var checkbox = new CQ.Ext.form.Checkbox({
                            "boxLabel": option["jcr:title"],
                            "inputValue": value,
                            "name": name
                        });

                        // toggle button to toggle the subPanel
                        var toggle = new CQ.Ext.Button({
                            "cls": "collapse"
                        });

                        panel = new CQ.Ext.Panel({
                            "cls": "leftpadding level" + level,
                            "border": false,
                            "toolTarget": "toolbar",
                            "tbar": [
                                checkbox,
                                "->",
                                toggle
                             ]
                        });

                        checkbox.on("check", function(cbox, checked) {
                            if (!checked) CQ_search_optionsPredicate.uncheckParents(cbox);
                            CQ_search_optionsPredicate.search();
                            panel.cascade(function(o) {
                                if (o instanceof CQ.Ext.form.Checkbox) {
                                    o.setValue(checked, true);
                                }
                                else if (o.titleCheckbox) {
                                    o.titleCheckbox.setValue(checked, true);
                                }
                                return true;
                            });
                        });

                        var op = this;
                        toggle.on("click", function() {
                            op.toggle(panel);
                        });


                        panel.toggle = toggle;
                        panel.titleCheckbox = checkbox;

                        // add panel for sub items
                        panel.subPanel = new CQ.Ext.Panel({
                            "border":false,
                            "cls": "subpanel",
                            "hideMode": "offsets"
                        });
                        panel.add(panel.subPanel);

                        parentPanel.add(panel);

                        level++;
                    }

                    for (var sub in option) {
                        if (CQ.Ext.type(option[sub]) == "object") {
                            var nextTagId = "";
                            if (tagId) {
                                if (tagId == ":") {
                                    // tag root: sub are namespaces
                                    nextTagId = sub + ":";
                                }
                                else if (tagId.indexOf(":") == -1) {
                                    // tagId is namespace
                                    nextTagId = tagId + ":" + sub;
                                }
                                else {
                                    // tagId is tag
                                    nextTagId = tagId + "/" + sub;
                                }
                            }
                            this.traverseOption(option[sub], panel ? panel.subPanel : parentPanel, level, nextTagId);
                        }
                    }
                }
                else {
                    // leaf option

                    this.counter++;
                    var value = option["value"] ? option["value"] : "";
                    if (!value && tagId) value = tagId;
                    var title = option["jcr:title"] ? option["jcr:title"] : value;

                    var checkbox = new CQ.Ext.form.Checkbox({
                        "boxLabel": title,
                        "name": this.groupId + "." +  this.predicateName + "." + this.counter + "_value",
                        "inputValue": value
                    });

                    // register the checkbox
                    //todo: not save: same value in different fieldsets possible
                    this.controls[option["value"]] = checkbox;

                    checkbox.on("check", function(cbox, checked) {
                        if (!checked) {
                            // uncheck leaf checkbox: uncheck according fieldset checkboxes
                            CQ_search_optionsPredicate.uncheckParents(cbox);
                        }

                        CQ_search_optionsPredicate.search();
                    });

//                    checkbox.on("hide", function(e) {
//                        e.findParentByType("fieldset").bubble(function(o){
//                            var checkboxes = o.findByType("checkbox");
//                            var onevisible = false;
//                            for (var i=0;i<checkboxes.length;i++) {
//                                if (checkboxes[i].isVisible()||checkboxes[i].getValue()) {
//                                    onevisible = true;
//                                }
//                                if (onevisible) {
//                                    o.show();
//                                } else {
//                                  o.hide();
//                                }
//                            }
//                            return true;
//                            });
//                        });

                    parentPanel.add(checkbox);
                }
            },

            update: function(result) {
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                    control.hits = 0;
//                }
//
//                for (var fac in result.facets) {
//                    var facet = result.facets[fac];
//                    for (var i=0;i<facet.length;i++) {
//                        if (this.controls[facet[i].value]!=undefined) {
//                            var control =  this.controls[facet[i].value];
//                            control.hits = facet[i].count;
//
//                            control.labelEl.dom.innerHTML = control.boxLabel + " (" + facet[i].count + ")";
//
//                            //this.controls[facet[i].value].labelEl.dom.innerHTML = "foo";
//                            // = this.controls[facet[i].value].boxLabel + "
////                                console.log("found: " + this.controls[facet[i].value] + " " + facet[i].count);
//                        } else {
////                                console.log("uncategorized: " + facet[i].value);
//                        }
//                    }
//                    break;//all groups are the same
//                }

                //todo: problem on 09-09-16: hides entire control on initial search
//                for (var item in this.controls) {
//                    var control = this.controls[item];
//                        if (control.hits==0&&control.getValue!=true) {
//                            control.hide();
//                        } else {
//                            control.show();
//                        }
//                    }
              }
        };

        CQ_search_optionsPredicate.init();
        CQ.search.Util.getQueryBuilder().on("loadResult", CQ_search_optionsPredicate.update, CQ_search_optionsPredicate);

});
</script>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_2" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_2&quot;,&quot;dialog&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fcq%2Fsearch%2Fcomponents%2Fpredicates%2Foptions%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Fquerybuilder%2Fleft%2Foptions_2&quot;,&quot;dialogClassic&quot;:&quot;/libs/cq/search/components/predicates/options/dialog&quot;,&quot;type&quot;:&quot;cq/search/components/predicates/options&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys/options|parbase&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"cq/search/components/predicates/options","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/options_2","selectors":null,"servlet":"Script /libs/cq/search/components/predicates/options/options.jsp","totalTime":8,"selfTime":8}-->
<div class="date parbase section"><div class="predicatebox">
    <div class="title default">Date</div>
    <div id="cq-predicate-1445545965631" class="content"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1281" name="4_daterange.property" class=" x-form-hidden x-form-field" value="jcr:content/jcr:lastModified"><div id="ext-comp-1282" class=" cq-static">Modified after:</div><input type="hidden" id="ext-comp-1283" name="4_daterange.lowerBound" class=" x-form-hidden x-form-field" value=""><div id="cq-gen549"><table style="border-collapse:collapse" id="cq-gen548"><tbody><tr><td style="padding-right:0px" class="ux-datetime-date" id="cq-gen550"><div class="x-form-field-wrap x-form-field-trigger-wrap" id="cq-gen551" style="width: 17px;"><input type="text" size="10" autocomplete="off" id="ext-comp-1283-date" class="x-form-text x-form-field" style="width: 125px;"><img src="/libs/cq/ui/resources/0.gif" alt="" class="x-form-trigger x-form-date-trigger" id="cq-gen552"></div></td><td style="display:none;" class="ux-datetime-time" id="cq-gen553"><div class="x-form-field-wrap x-form-field-trigger-wrap" id="cq-gen554" style="width: 17px;"><input type="text" size="24" autocomplete="off" id="ext-comp-1283-time" class="x-form-text x-form-field" style="width: 75px;"><img src="/libs/cq/ui/resources/0.gif" alt="" class="x-form-trigger x-form-arrow-trigger" id="cq-gen555"></div></td></tr></tbody></table></div><div id="ext-comp-1284" class=" cq-static">and/or before:</div><input type="hidden" id="ext-comp-1285" name="4_daterange.upperBound" class=" x-form-hidden x-form-field" value=""><div id="cq-gen557"><table style="border-collapse:collapse" id="cq-gen556"><tbody><tr><td style="padding-right:0px" class="ux-datetime-date" id="cq-gen558"><div class="x-form-field-wrap x-form-field-trigger-wrap" id="cq-gen559" style="width: 17px;"><input type="text" size="10" autocomplete="off" id="ext-comp-1285-date" class="x-form-text x-form-field" style="width: 125px;"><img src="/libs/cq/ui/resources/0.gif" alt="" class="x-form-trigger x-form-date-trigger" id="cq-gen560"></div></td><td style="display:none;" class="ux-datetime-time" id="cq-gen561"><div class="x-form-field-wrap x-form-field-trigger-wrap" id="cq-gen562" style="width: 17px;"><input type="text" size="24" autocomplete="off" id="ext-comp-1285-time" class="x-form-text x-form-field" style="width: 75px;"><img src="/libs/cq/ui/resources/0.gif" alt="" class="x-form-trigger x-form-arrow-trigger" id="cq-gen563"></div></td></tr></tbody></table></div></div>
</div>
<script type="text/javascript">

    CQ.Ext.onLoad(function() {

        var qb = CQ.search.Util.getQueryBuilder();
        var id = qb.createId("daterange");

        qb.addField({
            "xtype": "hidden",
            "renderTo": "cq-predicate-1445545965631",
            "name": id + ".property",
            "value": "jcr:content\/jcr:lastModified"
        });

        // lower bound
        new CQ.Static({
            "renderTo": "cq-predicate-1445545965631",
            "text": "Modified after:"
        });
        qb.addField({
            "xtype": "datetime",
            "renderTo": "cq-predicate-1445545965631",
            "name": id + ".lowerBound",
            "dateWidth": 150,
            "hideTime": true,
            "disableTypeHint": true
        });

        // upper bound
        new CQ.Static({
            "renderTo": "cq-predicate-1445545965631",
            "text": "and\/or before:"
        });
        qb.addField({
            "xtype": "datetime",
            "renderTo": "cq-predicate-1445545965631",
            "name": id + ".upperBound",
            "dateWidth": 150,
            "hideTime": true,
            "disableTypeHint": true
        });
    });
</script>

<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/date_0" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/date_0&quot;,&quot;dialog&quot;:&quot;/libs/cq/search/components/predicates/date/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fcq%2Fsearch%2Fcomponents%2Fpredicates%2Fdate%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Fquerybuilder%2Fleft%2Fdate_0&quot;,&quot;dialogClassic&quot;:&quot;/libs/cq/search/components/predicates/date/dialog&quot;,&quot;type&quot;:&quot;cq/search/components/predicates/date&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys/date|parbase&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"cq/search/components/predicates/date","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/date_0","selectors":null,"servlet":"Script /libs/cq/search/components/predicates/date/date.jsp","totalTime":1,"selfTime":1}-->
<div class="parbase section notexpired">

<div class="predicatebox">
    <div class="title default">Filter Inactive</div>
    <div id="cq-predicate-1445545965634" class="content"><div id="ext-comp-1286" class=" cq-static">Filter inactive assets:</div><div class="x-form-check-wrap" id="cq-gen564"><input type="checkbox" autocomplete="off" id="ext-comp-1287" name="5_notexpired" class=" x-form-checkbox x-form-field" value="true"><label for="ext-comp-1287" class="x-form-cb-label" id="cq-gen565">&nbsp;</label></div></div>
</div>
<script type="text/javascript">

    CQ.Ext.onLoad(function() {

        var qb = CQ.search.Util.getQueryBuilder();
        var id = qb.createId("notexpired");
        var field;
        new CQ.Static({
            "renderTo": "cq-predicate-1445545965634",
            "text": "Filter inactive assets:"
        });
        qb.addField({
            "xtype" : "checkbox",
            "renderTo": "cq-predicate-1445545965634",
            "name": id, 
            "inputValue": "true",
            "listeners" : {
                check : function(component, flag) {
                    if (flag === true) {
                        field =qb.addField({
                            "xtype" : "hidden",
                            "renderTo": "cq-predicate-1445545965634",
                            "name" : id + ".property",
                            "value" : "jcr:content\/offTime" 
                        });
                    } else {
                        qb.removeField(field);
                    }
                }
            }
        });
    });
</script>

<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/notexpired_0" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/notexpired_0&quot;,&quot;dialog&quot;:&quot;/libs/dam/components/search/predicates/notexpired/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Fdam%2Fcomponents%2Fsearch%2Fpredicates%2Fnotexpired%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Fquerybuilder%2Fleft%2Fnotexpired_0&quot;,&quot;dialogClassic&quot;:&quot;/libs/dam/components/search/predicates/notexpired/dialog&quot;,&quot;type&quot;:&quot;dam/components/search/predicates/notexpired&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys/notexpired|parbase&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"/libs/dam/components/search/predicates/notexpired","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/notexpired_0","selectors":null,"servlet":"Script /libs/dam/components/search/predicates/notexpired/notexpired.jsp","totalTime":3,"selfTime":3}-->
<div class="new section"><cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/*" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/*&quot;,&quot;type&quot;:&quot;foundation/components/parsys/new&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys/new&quot;,&quot;editConfig&quot;:{&quot;actions&quot;:[CQ.wcm.EditBase.INSERT],&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"foundation/components/parsys/new","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left/*","selectors":null,"servlet":"Script /libs/foundation/components/parsys/new/new.jsp","totalTime":1,"selfTime":1}-->

<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder/left" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder/left&quot;,&quot;designDialog&quot;:&quot;/libs/foundation/components/parsys/design_dialog&quot;,&quot;designDialogLoadingMode&quot;:&quot;inline&quot;,&quot;designDialogLayout&quot;:&quot;auto&quot;,&quot;designDialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Ffoundation%2Fcomponents%2Fparsys%2Fdesign_dialog&amp;content=%2Fetc%2Fdesigns%2Fassetshare%2Fjcr%3Acontent%2Fassetshare%2Fquerybuilder%2Fleft&quot;,&quot;designDialogClassic&quot;:&quot;/libs/foundation/components/parsys/design_dialog&quot;,&quot;type&quot;:&quot;foundation/components/parsys&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/left|parsys&quot;,&quot;isContainer&quot;:true}"></cq>
</div>
<!--cq{"decorated":true,"type":"foundation/components/parsys","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder/left","selectors":null,"servlet":"Script /libs/foundation/components/parsys/parsys.jsp","totalTime":24,"selfTime":6}-->

                </div>
                <div class="actions">
                    <div class="title">Actions</div>
                    <div class="parsys actions"><div class="viewasset section">
<a href="javascript:CQ.dam.Util.openAssets('');" class="">View Asset</a>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/actions/viewasset" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/actions/viewasset&quot;,&quot;dialog&quot;:&quot;/apps/dam/components/assetshare/actions/viewasset/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Fapps%2Fdam%2Fcomponents%2Fassetshare%2Factions%2Fviewasset%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Factions%2Fviewasset&quot;,&quot;dialogClassic&quot;:&quot;/apps/dam/components/assetshare/actions/viewasset/dialog&quot;,&quot;type&quot;:&quot;dam/components/assetshare/actions/viewasset&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/actions|parsys/viewasset&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"dam/components/assetshare/actions/viewasset","path":"/content/dam/sunpower/asset-share/jcr:content/actions/viewasset","selectors":null,"servlet":"Script /apps/dam/components/assetshare/actions/viewasset/viewasset.jsp","totalTime":1,"selfTime":1}-->
<div class="viewasset section">
<a href="javascript:CQ.dam.Util.openAssets('/content/dam/sunpower/asset-share/asseteditor');" class="editonly">Edit Metadata</a>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/actions/viewasset_0" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/actions/viewasset_0&quot;,&quot;dialog&quot;:&quot;/apps/dam/components/assetshare/actions/viewasset/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Fapps%2Fdam%2Fcomponents%2Fassetshare%2Factions%2Fviewasset%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Factions%2Fviewasset_0&quot;,&quot;dialogClassic&quot;:&quot;/apps/dam/components/assetshare/actions/viewasset/dialog&quot;,&quot;type&quot;:&quot;dam/components/assetshare/actions/viewasset&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/actions|parsys/viewasset&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"dam/components/assetshare/actions/viewasset","path":"/content/dam/sunpower/asset-share/jcr:content/actions/viewasset_0","selectors":null,"servlet":"Script /apps/dam/components/assetshare/actions/viewasset/viewasset.jsp","totalTime":1,"selfTime":1}-->
<div class="download section">
<a href="javascript:CQ.dam.Util.downloadAsset(CQ.search.Util.getSelection());">Download</a>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/actions/download" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/actions/download&quot;,&quot;dialog&quot;:&quot;/apps/dam/components/assetshare/actions/download/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Fapps%2Fdam%2Fcomponents%2Fassetshare%2Factions%2Fdownload%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Factions%2Fdownload&quot;,&quot;dialogClassic&quot;:&quot;/apps/dam/components/assetshare/actions/download/dialog&quot;,&quot;type&quot;:&quot;dam/components/assetshare/actions/download&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/actions|parsys/download&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"dam/components/assetshare/actions/download","path":"/content/dam/sunpower/asset-share/jcr:content/actions/download","selectors":null,"servlet":"Script /apps/dam/components/assetshare/actions/download/download.jsp","totalTime":0,"selfTime":0}-->
<div class="lightbox section">

<div class="title level1">Lightbox</div>
<script type="text/javascript">
    function CQ_dam_lightboxAction_add(selection) {
       var paths = [];
       for (var i = 0; i < selection.length; i++) {
           paths.push(selection[i]["jcr:path"]);
       }
       CQ.Ext.Ajax.request({
           "url":CQ.Util.externalize("/libs/dam/lightbox"),
           "method":"POST",
           "callback":function(options, success, xhr) {
               var response = CQ.HTTP.buildPostResponseFromHTML(xhr.responseText);
               var status = response.headers[CQ.utils.HTTP.HEADER_STATUS];
               if (status == 200) {
                   CQ.Ext.getCmp('dam-lightbox-dataview').store.reload();
               }
           },
           "params":{
               "path":paths,
               "_charset_":"utf-8",
               "cmd":"add"
           },
           "scope":this
       });
    }   
    function CQ_dam_lightboxAction_addRendition(selection) {
        var paths = [];
        var renditionsStore = new Object();
        renditionsStore["renditions"] = new Array();
        for (var i = 0; i < selection.length; i++) {

            var assetPath = selection[i]["jcr:path"];


            var assetName = assetPath.substring(assetPath.lastIndexOf("/") + 1);
                        var getRenditions = CQ.HTTP.eval(assetPath+"/jcr:content/renditions.4.json");

            var imageLength = selection[i]["jcr:content"]["metadata"]["tiff:ImageLength"];
            var imageWidth = selection[i]["jcr:content"]["metadata"]["tiff:ImageWidth"];


            String.prototype.startsWith = function (str) {
                return (this.match("^" + str) == str)
            }
            
            for (var rend in getRenditions) {
                
                var rendition = rend.toString();
                var imageExtension = rendition.substring(rendition.lastIndexOf(".") + 1);
                    
                if (!rendition.startsWith("jcr:") 
                        
                                  && !rendition.startsWith("cq5dam.thumbnail") && !rendition.startsWith("cq5dam.web")
                   )
                {
                    var renditionProps = getRenditions[rend]["jcr:content"];
                    var renditionHandler = renditionProps["rendition.handler.id"];
                    
                    //check if it is a proxy rendition by looking at the handler
                    var isProxyRendition = false;
                    if (!renditionHandler || renditionHandler == "jcr.default" ) {
                        isProxyRendition = false;
                    } else  {
                        isProxyRendition = true;
                    }
                        
                    if (!isProxyRendition) {
                        
                        var iconPath = CQ.HTTP.externalize(assetPath + "/jcr:content/renditions/" + CQ.HTTP.encodePath("cq5dam.thumbnail.48.48.png"), true);
                        var path = CQ.HTTP.externalize(assetPath + "/jcr:content/renditions/" + CQ.HTTP.encodePath(rend), true);
                        
                        var renditionName = rendition.substring(0, rendition.lastIndexOf("."));
                        var height = renditionName.substring(renditionName.lastIndexOf(".") + 1);
                        renditionName = renditionName.substring(0, renditionName.lastIndexOf("."));
                        var width = renditionName.substring(renditionName.lastIndexOf(".") + 1);
                        
                        var rObj = new Object();
                        rObj["name"] = new Object();
                        
                        if (rend == "original") {
                            rObj["name"] = assetName;
    
                        } else {
                            rObj["name"] = rendition;
    
                        }
                        
                        rObj["path"] = path;
                        // If is image extension os of following types we can show the actual thumbs
                        if (imageExtension == "jpg" || imageExtension == "jpeg" || imageExtension == "png") {
                            rObj["imgURL"] = path + ".thumb.48.48.png";
                        } else {
                            rObj["imgURL"] = iconPath;
                        }
    
    
                        if (imageWidth != undefined && imageLength != undefined) {
                            rObj["size"] = imageWidth + " &times; " + imageLength;
                        }
                        
                        renditionsStore["renditions"].push(rObj);
                    }
                }
            }
        }

        if (selection.length > 0) {
            // Generic fields array to use in both store defs.
            var fields = [
                {name:'name', mapping:'name'},
                {name:'imgURL', mapping:'imgURL'},
                {name:'size', mapping:'size'},
                {name:'path', mapping:'path'}
            ];

            // create the data store
            var gridStore = new CQ.Ext.data.JsonStore({
                fields:fields,
                data:renditionsStore,
                root:'renditions'
            });

            //gridStore.load();

            // Column Model shortcut array
            var cols = [
                { id:'name', header:"Record Name", width:160, sortable:true, dataIndex:'name'},
                {header:"column1", width:50, sortable:true, dataIndex:'column1'},
                {header:"column2", width:50, sortable:true, dataIndex:'column2'}
            ];

            var tpl = new CQ.Ext.XTemplate( 
                '<tpl for= "." >'+
                '<div class = "rendition-item">'+
                '<table ><tr>'+
                '<td><div class="thumbnail"' +
                'style="background-image:url(\'{imgURL}\');"></div></td>' +
                '<td align="center" vertical-align="middle"><div style="padding:10px'+
                '10px;font-size:11px;font-weight:normal;" id="{name}">{name}</div></td></tr>'+
                '</table>' +
                '</div>' +
                '</tpl>'
               );

            var iconTemplate = new CQ.Ext.XTemplate( 
                '<div class = "rendition-item"> '+         
                '<div class = "thumbnail"' +
                'style="background-image:url(\'{imgURL}\');"></div>' +
                '</div>'
               );

            var sm = new CQ.Ext.grid.CheckboxSelectionModel();
            var renditionGrid = new CQ.Ext.grid.GridPanel({
                ds:gridStore,
                cm:new CQ.Ext.grid.ColumnModel([
                    sm,
                    {id:'icon', width:200, xtype:'templatecolumn', tpl:iconTemplate, dataIndex:'imgURL'},
                    {header:"Name", width:120, sortable:true, xtype:'templatecolumn', tpl:'{name}', dataIndex:'name'},
                    {header:"Size", width:200, sortable:true, xtype:'templatecolumn', tpl:'{size}', dataIndex:'size'}
                ]),
                sm:sm,
                autoHeight:true,
                autoWidth:true,
                autoScroll:false,
                margins:"0 0 0 0",
                fitToFrame:true,
                renderTo:document.body,
                iconCls:'icon-grid'
            });
            var renditionDataView = new CQ.Ext.DataView({
                store:gridStore,
                tpl:tpl,
                autoHeight:true,
                singleSelect:true,
                multiSelect:true,
                id:'renditions-grid',
                overClass:'x-view-over',
                itemSelector:'.rendition-item',
                emptyText:'No images to display',
                listeners:{
                    "selectionchange":function () {

                    }
                }
            });

            var config = CQ.WCM.getDialogConfig({
                "xtype":"panel",
                "padding":"0 0 0 0",
                "items":[renditionGrid]
            });
            var ae = this;
            config = CQ.Util.applyDefaults(config, {
                "title":CQ.I18n.getMessage("Choose Renditions"),
                "success":function () {
                    alert("Hello World");
                },
                "failure":function (form, action) {

                },
                "height":354,
                "width":500,
                "padding":'0',
                "okText":CQ.I18n.getMessage("Add"),
                "params":{
                    "dimensions":"140,100/48,48/319,319"
                }
            });
            
            var dialog = CQ.Util.build(config, true);
            dialog.on("beforesubmit", function () {
                var records = renditionGrid.getSelectionModel().selections.items;
                var paths = [];
                for (var i = 0; i < records.length; i++) {
                    paths.push(records[i].data["path"]);
                }
                CQ.Ext.Ajax.request({
                    "url":CQ.Util.externalize("/libs/dam/lightbox"),
                    "method":"POST",
                    "callback":function (options, success, xhr) {
                        var response = CQ.HTTP.buildPostResponseFromHTML(xhr.responseText);
                        var status = response.headers[CQ.utils.HTTP.HEADER_STATUS];
                        if (status == 200) {
                            CQ.Ext.getCmp('dam-lightbox-dataview').store.reload();
                        }
                    },
                    "params":{
                        "renditionPath":paths,
                        "_charset_":"utf-8",
                        "cmd":"add"
                    },
                    "scope":this
                });
            });
            dialog.show();
        }
}
    
    function CQ_dam_lightboxAction_remove(selection) {
        var paths = [];
        for (var i = 0; i < selection.length; i++) {
            paths.push(selection[i]["path"]);
        }
        CQ.Ext.Ajax.request({
            "url":CQ.Util.externalize("/libs/dam/lightbox"),
            "method":"POST",
            "callback":function(options, success, xhr) {
                var response = CQ.HTTP.buildPostResponseFromHTML(xhr.responseText);
                var status = response.headers[CQ.utils.HTTP.HEADER_STATUS];
                if (status == 200) {
                    CQ.Ext.getCmp('dam-lightbox-dataview').store.reload();
                }
            },
            "params":{
                "path":paths,
                "_charset_":"utf-8",
                "cmd":"remove"
            },
            "scope":this
        });
    }
    function CQ_dam_lightboxAction_clear() {
       
        CQ.Ext.Ajax.request({
            "url":CQ.Util.externalize("/libs/dam/lightbox"),
            "method":"POST",
            "callback":function(options, success, xhr) {
                var response = CQ.HTTP.buildPostResponseFromHTML(xhr.responseText);
                var status = response.headers[CQ.utils.HTTP.HEADER_STATUS];
                if (status == 200) {
                    CQ.Ext.getCmp('dam-lightbox-dataview').store.reload();
                }
            },
            "params":{
                "_charset_":"utf-8",
                "cmd":"clear"
            },
            "scope":this
        });
    }
    var lightbox;

    CQ.Ext.onLoad(function() {

        var template =
                '<table><tbody>' +
                    '<tr><td class="padding-cell top" colspan="2"><div /></td></tr>' +
                    '<tpl for=".">' +
                        '<tr><td colspan="2" class="line"></td></tr>' +
                        '<tr class="item">' +
                            '<td class="thumbnail-cell"><div style="background-image:url(\'{[CQ.HTTP.externalize(CQ.HTTP.encodePath(values.path),true)]}.thumb.48.48.png\');" /></td>' +
                            '<td class="title-cell"><div>{[CQ.shared.XSS.getXSSValue(values.title)]}</div></td>' +
                        '</tr>' +
                    '</tpl>' +
                    '<tr><td class="padding-cell bottom" colspan="2"><div /></td></tr>' +
                '</tbody></table>';
//                '</tpl>';


        var proxyConfig = CQ.Util.applyDefaults(proxyConfig, {
            "url": "/libs/dam/lightbox.json",
            "method": "GET"
        });

        var storeConfig = CQ.Util.applyDefaults(storeConfig, {
            "autoLoad": true,
            "proxy": new CQ.Ext.data.HttpProxy(proxyConfig),
            "reader": new CQ.Ext.data.JsonReader({
                "totalProperty": "results",
                "root": "entries",
                "fields": [
                        "path","title","damPath"
                        ],
                "id": "path"
            }),
            "baseParams": {
                "_charset_": "utf-8"
            },
            "listeners": {
                "load": function(store, records, options) {
                    store.records = records;
                }
            }
        });


        var config = {
            "xtype": "panel",
            "renderTo":"cq-dam-lightbox",
            "height":200,
            "multiSelect": true,
            "id": "dam-lightbox",
            "bodyCssClass": "dam-lightbox-body",

            "items": {
                "xtype": "dataview",
                "id": "dam-lightbox-dataview",
                "store": new CQ.Ext.data.GroupingStore(storeConfig),
                "cls": "lightbox",
                "layout": "fit",
                "loadingText": CQ.I18n.getMessage("Loading content..."),
                "multiSelect": true,
                "singleSelect": true,
                "overClass": "x-view-over",
                "emptyText": CQ.I18n.getMessage("No content items to display"),
                "tpl": template,
                "itemSelector": ".item"
            }

        };
        lightbox = CQ.Util.build(config);
    });

    function CQ_dam_lightboxAction_getSelection(dataView) {
        try {
            var r = dataView.getSelectedRecords();
            var s = [];
            for (var i = 0; i < r.length; i++) {
                s.push(r[i].json);
            }
            return s;
        }
        catch (e) {
            return [];
        }
    }

    function CQ_dam_lightboxAction_download() {
       var dataView = CQ.Ext.getCmp("dam-lightbox-dataview");
       var items = dataView.store.data.items;
       CQ.Ext.Ajax.request({
           url:"/libs/dam/drm",
           method:"POST",
           params: {
               "checkDRMStatus" : true
           },
           success:function (response, opts) {
               if (response.responseText.indexOf("DRM ENABLED") > -1) {
                   var dlg = new CQ.wcm.LicenseBox(items);
                   if (dlg.licensable) {
                       dlg.on("beforesubmit", function () {
                           CQ_dam_lightboxAction_download_after_license_agreement();

                       });
                       dlg.show();
                   } else {
                       CQ_dam_lightboxAction_download_after_license_agreement();

                   }
               } else {
                   CQ_dam_lightboxAction_download_after_license_agreement();
               }

           },
           failure:function (response, opts) {
            alert(response.status);
           }
     });
   }
    
    function CQ_dam_lightboxAction_download_after_license_agreement() {
        var selection = [];
        try {
            var dataView = CQ.Ext.getCmp("dam-lightbox-dataview");
            var items = dataView.store.data.items;
            for (var i = 0; i < items.length; i++) {
                selection.push({
                    "jcr:path": items[i].id
                });
            }
        }
        catch (e) {}
        CQ.dam.Util.downloadAsset(selection);
    }
    
    function CQ_dam_lightboxAction_refresh() {
        CQ.Ext.getCmp('dam-lightbox-dataview').store.reload();
    }

    function CQ_dam_lightboxAction_refresh() {
        CQ.Ext.getCmp('dam-lightbox-dataview').store.reload();
    }

</script>

<a href="javascript:CQ_dam_lightboxAction_add(CQ.search.Util.getSelection());">Add Asset</a>&nbsp;|
<a href="javascript:CQ_dam_lightboxAction_addRendition(CQ.search.Util.getSelection());">Add Renditions</a>&nbsp;|
<a href="javascript:CQ_dam_lightboxAction_remove(CQ_dam_lightboxAction_getSelection(CQ.Ext.getCmp('dam-lightbox-dataview')));">Remove</a>&nbsp;|
<a href="javascript:CQ_dam_lightboxAction_download();">Download</a>
<a href="javascript:CQ_dam_lightboxAction_refresh();">Refresh</a> |
<a href="javascript:CQ_dam_lightboxAction_clear();">Clear All</a>
<div id="cq-dam-lightbox" style=""><div id="dam-lightbox" class=" x-panel"><div class="x-panel-bwrap" id="cq-gen567"><div class="x-panel-body dam-lightbox-body x-panel-body-noheader" id="cq-gen568" style="height: 198px;"><div id="dam-lightbox-dataview" class=" lightbox">No content items to display  </div></div></div></div></div>


<cq data-path="/content/dam/sunpower/asset-share/jcr:content/actions/lightbox" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/actions/lightbox&quot;,&quot;dialog&quot;:&quot;/apps/dam/components/assetshare/actions/lightbox/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Fapps%2Fdam%2Fcomponents%2Fassetshare%2Factions%2Flightbox%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Factions%2Flightbox&quot;,&quot;dialogClassic&quot;:&quot;/apps/dam/components/assetshare/actions/lightbox/dialog&quot;,&quot;type&quot;:&quot;dam/components/assetshare/actions/lightbox&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/actions|parsys/lightbox&quot;,&quot;editConfig&quot;:{&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"dam/components/assetshare/actions/lightbox","path":"/content/dam/sunpower/asset-share/jcr:content/actions/lightbox","selectors":null,"servlet":"Script /apps/dam/components/assetshare/actions/lightbox/lightbox.jsp","totalTime":1,"selfTime":1}-->
<div class="new section"><cq data-path="/content/dam/sunpower/asset-share/jcr:content/actions/*" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/actions/*&quot;,&quot;type&quot;:&quot;foundation/components/parsys/new&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/actions|parsys/new&quot;,&quot;editConfig&quot;:{&quot;actions&quot;:[CQ.wcm.EditBase.INSERT],&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":true,"type":"foundation/components/parsys/new","path":"/content/dam/sunpower/asset-share/jcr:content/actions/*","selectors":null,"servlet":"Script /libs/foundation/components/parsys/new/new.jsp","totalTime":3,"selfTime":3}-->

<cq data-path="/content/dam/sunpower/asset-share/jcr:content/actions" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/actions&quot;,&quot;designDialog&quot;:&quot;/libs/foundation/components/parsys/design_dialog&quot;,&quot;designDialogLoadingMode&quot;:&quot;inline&quot;,&quot;designDialogLayout&quot;:&quot;auto&quot;,&quot;designDialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Flibs%2Ffoundation%2Fcomponents%2Fparsys%2Fdesign_dialog&amp;content=%2Fetc%2Fdesigns%2Fassetshare%2Fjcr%3Acontent%2Fassetshare%2Fquerybuilder%2Factions&quot;,&quot;designDialogClassic&quot;:&quot;/libs/foundation/components/parsys/design_dialog&quot;,&quot;type&quot;:&quot;foundation/components/parsys&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase/actions|parsys&quot;,&quot;isContainer&quot;:true}"></cq>
</div>
<!--cq{"decorated":true,"type":"foundation/components/parsys","path":"/content/dam/sunpower/asset-share/jcr:content/actions","selectors":null,"servlet":"Script /libs/foundation/components/parsys/parsys.jsp","totalTime":19,"selfTime":13}-->

                </div>
            </div>
        </td>
        <td class="lensdeck-cell">
            
            <div id="lensdeck-wrapper" class="lensdeck-wrapper"><div id="lensdeck" class=" x-panel lensdeck x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen7"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen8"><div id="ext-comp-1015" class="x-panel x-panel-noborder x-hide-display" style="overflow: visible;"><div class="x-panel-bwrap" id="cq-gen571"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen572" style="overflow: visible;"><div id="ext-comp-1016" class=" lens-dataview mosaic" style="height: auto;">No assets available</div></div></div></div><div id="ext-comp-1018" class="x-panel x-panel-noborder"><div class="x-panel-bwrap" id="cq-gen573"><div class="x-panel-body x-panel-body-noheader x-panel-body-noborder" id="cq-gen574" style="overflow: visible;"><div id="ext-comp-1019" class=" lens-dataview list" style="height: auto;">No assets available</div></div></div></div></div></div></div></div>
        </td>
    </tr>

</tbody></table>
<script type="text/javascript">

    CQ.Ext.onLoad(function() {

        // CUSTOMIZATION FOR SUNPOWER
        function getUrlVars()
        {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for(var i = 0; i < hashes.length; i++)
            {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        document.getElementById("left-cell-content").style.display = "";

        // initialize DAM specific base params
        var qb = CQ.search.Util.getQueryBuilder();

        qb.setLimit("24");qb.setPaths(["/content/dam/geometrixx/travel","/content/dam/geometrixx/portraits","/content/dam/geometrixx/offices","/content/dam/geometrixx/documents","/content/dam/geometrixx/icons","/content/dam/geometrixx/movies","/content/dam/geometrixx/packshots"]);

                qb.setTypes(["dam:Asset"]);

        qb.on("loadResult", function(result) {
            document.getElementById("results").innerHTML = result.total;
            document.getElementById("results-cell").style.visibility = "visible";

            if (qb.totalPages > 1) {
                document.getElementById("current-page").innerHTML = qb.currentPage;
                document.getElementById("total-pages").innerHTML = qb.totalPages;

                document.getElementById("backward").style.visibility = qb.currentPage == 1 ? "hidden" : "visible";
                document.getElementById("forward").style.visibility = qb.currentPage == qb.totalPages ? "hidden" : "visible";

                document.getElementById("paging-wrapper").style.display = "inline";
            }
            else {
                document.getElementById("paging-wrapper").style.display = "none";
            }
        });

        // add fulltext search field
        qb.addField({
            "xtype": "trigger",
            "name": "fulltext",
            "cls": "fulltextField",
            "renderTo": "fulltext-cell",
            "width": 281,
            "triggerClass": "x-form-search-trigger",
            "onTriggerClick": function() {
                CQ.search.Util.maskLens();
                CQ.search.Util.getQueryBuilder().submit();
            },
            "listeners": {
                "specialkey": function(field, e) {
                    if (e.getKey() == CQ.Ext.EventObject.ENTER) {
                        CQ.search.Util.maskLens();
                        CQ.search.Util.getQueryBuilder().submit();
                    }
                }
            }
        });

        // param to not find sub assets
        qb.addHidden("mainasset", "true");

        // hit writer configuration
        qb.addHidden("p.hitwriter", "selective");
        qb.addHidden("p.properties", "jcr:path jcr:primaryType jcr:content/metadata/dc:title jcr:content/metadata/dc:format jcr:content/metadata/dam:ModificationDate "
        + "jcr:content/metadata/dam:CreationDate jcr:content/metadata/tiff:ImageWidth jcr:content/metadata/tiff:ImageLength");

        qb.addHidden("orderby", "path");

        // enable RSS link in the header for cooliris support
        qb.setRssLinkUrl("/bin/querybuilder.feed");

        // CUSTOMIZATION FOR SUNPOWER
        var searchParam = getUrlVars()["query"];    
        $('.x-form-text.x-form-field.fulltextField').val(searchParam);     

        // initial submit
        CQ.search.Util.getQueryBuilder().submit();
    });
</script>
<link title="Media RSS (AEM)" rel="alternate" type="application/atom+xml" href="/bin/querybuilder.feed?cookie=cq-mrss&amp;p.limit=-1&amp;path=%2Fcontent%2Fdam&amp;type=dam:Asset&amp;mainasset=true">
<input type="hidden" size="20" autocomplete="off" id="ext-comp-1288" name="p.limit" class=" x-form-hidden x-form-field" value="24"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1289" name="6_group.0_path" class=" x-form-hidden x-form-field" value="/content/dam/geometrixx/travel"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1290" name="6_group.1_path" class=" x-form-hidden x-form-field" value="/content/dam/geometrixx/portraits"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1291" name="6_group.2_path" class=" x-form-hidden x-form-field" value="/content/dam/geometrixx/offices"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1292" name="6_group.3_path" class=" x-form-hidden x-form-field" value="/content/dam/geometrixx/documents"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1293" name="6_group.4_path" class=" x-form-hidden x-form-field" value="/content/dam/geometrixx/icons"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1294" name="6_group.5_path" class=" x-form-hidden x-form-field" value="/content/dam/geometrixx/movies"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1295" name="6_group.6_path" class=" x-form-hidden x-form-field" value="/content/dam/geometrixx/packshots"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1296" name="6_group.p.or" class=" x-form-hidden x-form-field" value="true"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1297" name="7_group.0_type" class=" x-form-hidden x-form-field" value="dam:Asset"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1299" name="mainasset" class=" x-form-hidden x-form-field" value="true"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1300" name="p.hitwriter" class=" x-form-hidden x-form-field" value="selective"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1301" name="p.properties" class=" x-form-hidden x-form-field" value="jcr:path jcr:primaryType jcr:content/metadata/dc:title jcr:content/metadata/dc:format jcr:content/metadata/dam:ModificationDate jcr:content/metadata/dam:CreationDate jcr:content/metadata/tiff:ImageWidth jcr:content/metadata/tiff:ImageLength"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1302" name="orderby" class=" x-form-hidden x-form-field" value="path"><input type="hidden" size="20" autocomplete="off" id="ext-comp-1303" name="p.offset" class=" x-form-hidden x-form-field" value="0"></form>
<cq data-path="/content/dam/sunpower/asset-share/jcr:content/querybuilder" data-config="{&quot;path&quot;:&quot;/content/dam/sunpower/asset-share/jcr:content/querybuilder&quot;,&quot;dialog&quot;:&quot;/apps/dam/components/assetshare/querybuilder/dialog&quot;,&quot;dialogLoadingMode&quot;:&quot;inline&quot;,&quot;dialogLayout&quot;:&quot;auto&quot;,&quot;dialogSrc&quot;:&quot;/libs/cq/gui/components/authoring/compat/content/dialog.html?dialog=%2Fapps%2Fdam%2Fcomponents%2Fassetshare%2Fquerybuilder%2Fdialog&amp;content=%2Fcontent%2Fdam%2Fsunpower%2Fasset-share%2Fjcr%3Acontent%2Fquerybuilder&quot;,&quot;dialogClassic&quot;:&quot;/apps/dam/components/assetshare/querybuilder/dialog&quot;,&quot;type&quot;:&quot;dam/components/assetshare/querybuilder&quot;,&quot;csp&quot;:&quot;assetshare|page/querybuilder|parbase&quot;,&quot;editConfig&quot;:{&quot;xtype&quot;:&quot;editbar&quot;,&quot;listeners&quot;:{&quot;aftercopy&quot;:&quot;REFRESH_PAGE&quot;,&quot;afterdelete&quot;:&quot;REFRESH_PAGE&quot;,&quot;afteredit&quot;:&quot;REFRESH_PAGE&quot;,&quot;afterinsert&quot;:&quot;REFRESH_PAGE&quot;},&quot;inlineEditing&quot;:CQ.wcm.EditBase.INLINE_MODE_NEVER,&quot;actions&quot;:[{&quot;xtype&quot;:&quot;tbtext&quot;,&quot;text&quot;:&quot;Query Builder Properties<br><div style=\&quot;width:160px;height:1px;\&quot;><\/div>&quot;},{&quot;xtype&quot;:&quot;tbseparator&quot;},CQ.wcm.EditBase.EDIT],&quot;disableTargeting&quot;:true}}"></cq>
</div>
<!--cq{"decorated":false,"type":"dam/components/assetshare/querybuilder","path":"/content/dam/sunpower/asset-share/jcr:content/querybuilder","selectors":null,"servlet":"Script /libs/cq/search/components/querybuilder/querybuilder.jsp","totalTime":58,"selfTime":3}-->

        </div>
    </div>
    <div class="clear"></div>
</div>